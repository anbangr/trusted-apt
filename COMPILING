General Information
~~~~~~~~~~~~~~~~~~~
To compile this you need a couple things
  - A working POSIX system with working POSIX gcc, g++, make (GNU),
    ar, sh, awk and sed in the path
  - GNU Make 3.74 or so, -- normal UNIX make will NOT work
    * Note 3.77 is broken.    
  - A working ANSI C++ compiler, this is not g++ 2.7.* 
    g++ 2.8 works OK and newer egcs work well also. Nobody has tried it
    on other compilers :< You will need a properly working STL as well.
  - A C library with the usual POSIX functions and a BSD socket layer. 
    If your OS conforms to the Single Unix Spec then you are fine:
      http://www.opengroup.org/onlinepubs/7908799/index.html      
  - Refer to the Build-Depends information in debian/control for
    additional requirements (some of which are Debian-specific)

** NOTICE **
The C++ global constructors do not link correctly when using non-shared
libraries. This is probably the correct behavior of the linker, but I have
not yet had time to devise a work around for it. The correct thing to 
do is add a reference to debSystem in apt-pkg/init.cc, 
assert(&debSystem == 0) would be fine for instance.

Guidelines
~~~~~~~~~~
I am not interested in making 'ultra portable code'. I will accept patches
to make the code that already exists conform more to SUS or POSIX, but
I don't really care if your not-SUS OS doesn't work. It is simply too
much work to maintain patches for dysfunctional OSs. I highly suggest you
contact your vendor and express intrest in a conforming C library.

That said, there are lots of finicky problems that must be dealt with even
between the supported OS's. Primarily the path I choose to take is to put
a shim header file in build/include that transparently adds the required 
functionality. Patches to make autoconf detect these cases and generate the 
required shims are OK.

Current shims:
  * C99 integer types 'inttypes.h' 
  * sys/statvfs.h to convert from BSD/old-glibc statfs to SUS statvfs
  * rfc2553 hostname resolution (methods/rfc*), shims to normal gethostbyname.
    The more adventurous could steal the KAME IPv6 enabled resolvers for those
    OS's with IPv6 support but no rfc2553 (why?)
  * define _XOPEN_EXTENDED_SOURCE to bring in h_errno on HP-UX
  * socklen_t shim in netdb.h if the OS does not have socklen_t
  
The only completely non-shimmed OS is Linux with glibc2.1, glibc2.0 requires
the first three shims.

Platform Notes
~~~~~~~~~~~~~~
Debian GNU Linux 2.1 'slink'
Debian GNU Linux 'potato'
Debian GNU Linux 'woody'
  * All Archs
  - Works flawlessly
  - You will want to have debiandoc-sgml and docbook2man installed to get
    best results.
  - No IPv6 Support in glibc's < 2.1.

Sun Solaris
  SunOS cab101 5.7 Generic_106541-04 sun4u sparc
  SunOS csu201 5.8 Generic_108528-04 sun4u sparc  
  - Works fine
  - Note, no IPv6 Support, OS lacks RFC 2553 hostname resolution

OpenBSD
  OpenBSD gsb086 2.5 CMPUT#0 i386 unknown
  OpenBSD csu101 2.7 CMPUT#1 i386 unknown  
  - OS needs 'ranlib' to generate the symbol table after 'ar'.. (not using
    GNU ar with the gnu tool chain :<)
  - '2.5' does not have RFC 2553 hostname resolution, but '2.7' does
  - Testing on '2.7' suggests the OS has a bug in its handling of 
    ftruncate on files that have been written via mmap. It fills the page 
    that crosses the truncation boundary with 0's. 
    
HP-UX
  HP-UX nyquist B.10.20 C 9000/780 2016574337 32-user license
  - Evil OS, does not conform very well to SUS
     1) snprintf exists but is not prototyped, ignore spurious warnings
     2) No socklen_t
     3) Requires -D_XOPEN_SOURCE_EXTENDED for h_errno
    configure should fix the last two (see above)
  - Note, no IPv6 Support, OS lacks RFC 2553 hostname resolution
    
