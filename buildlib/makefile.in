# -*- make -*-

# This is the build directory make file, it sets the build directory
# and runs the src makefile.
ifndef NOISY
.SILENT:
endif
include environment.mak

SRCDIR=@top_srcdir@
BUILD:=$(shell pwd)
export BUILD

# Chain to the parent make to do the actual building
.PHONY: headers library clean veryclean all binary program doc \
        veryclean/local
all headers library clean veryclean binary program doc:
	$(MAKE) -C $(SRCDIR) -f Makefile $@

# Purge everything.
.PHONY: maintainer-clean dist-clean pristine sanity distclean
maintainer-clean dist-clean pristine sanity distclean:
	-rm -rf $(DIRS)
	-rm -f config.cache config.log config.status environment.mak makefile
	
# Create the required directories and build the shims
# The configure script fills in below, and then we do the right things..
# This cannot go in the configure script since the directories have not yet
# been created.. In any event I like the idea that you can change environment.mak
# and run make dirs and have the shims updated.
.PHONY: dirs
dirs: 
	$(MAKE) -C $(SRCDIR) -f Makefile $@
ifeq ($(HAVE_C9X),yes)
	@rm -f include/inttypes.h > /dev/null 2>&1
else
	@cp -p $(SRCDIR)/buildlib/inttypes.h.in include/inttypes.h
endif
ifeq ($(HAVE_STATVFS),yes)
	@rm -f include/statvfs.h > /dev/null 2>&1
else
	@cp -p $(SRCDIR)/buildlib/statvfs.h.in include/statvfs.h
	ln -sf . include/sys
endif
ifeq ($(NEED_SOCKLEN_T_DEFINE),yes)
	@cp -p $(SRCDIR)/buildlib/netdb.h.in include/netdb.h
else
	@rm -f include/netdb.h > /dev/null 2>&1
endif
	rm -f include/python
	ln -sf $(PYTHONINCLUDE) include/python
