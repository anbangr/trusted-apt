libapt-pkg.so.4.12 libapt-pkg4.12 #MINVER#
* Build-Depends-Package: libapt-pkg-dev
 TFRewritePackageOrder@Base 0.8.0
 TFRewriteSourceOrder@Base 0.8.0
 (c++)"FileExists(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"IdentCdrom(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int)@Base" 0.8.0
 (c++)"ListUpdate(pkgAcquireStatus&, pkgSourceList&, int)@Base" 0.8.0
 (c++)"MountCdrom(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"ParseCWord(char const*&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"ReadPinDir(pkgPolicy&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"RunScripts(char const*)@Base" 0.8.0
 (c++)"SafeGetCWD()@Base" 0.8.0
 (c++)"parsenetrc(char*, char*, char*, char*)@Base" 0.8.0
 (c++)"QuoteString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)@Base" 0.8.0
 (c++)"ReadPinFile(pkgPolicy&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"RegexChoice(RxChoiceList*, char const**, char const**)@Base" 0.8.0
 (c++)"SetNonBlock(int, bool)@Base" 0.8.0
 (c++)"TimeRFC1123(long)@Base" 0.8.0
 (c++)"flExtension(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"Base64Encode(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"ReadMessages(int, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)@Base" 0.8.0
 (c++)"SetCloseExec(int, bool)@Base" 0.8.0
 (c++)"StringToBool(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)@Base" 0.8.0
 (c++)"UnmountCdrom(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"_GetErrorObj()@Base" 0.8.0
 (c++)"pkgFixBroken(pkgDepCache&)@Base" 0.8.0
 (c++)"DeQuoteString(__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)@Base" 0.8.0
 (c++)"DeQuoteString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"OutputInDepth(unsigned long, char const*)@Base" 0.8.0
 (c++)"ReadConfigDir(Configuration&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&, unsigned int const&)@Base" 0.8.0
 (c++)"URItoFileName(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"UTF8ToCodeset(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >*)@Base" 0.8.0
 (c++)"pkgAllUpgrade(pkgDepCache&)@Base" 0.8.0
 (c++)"pkgInitConfig(Configuration&)@Base" 0.8.0
 (c++)"pkgInitSystem(Configuration&, pkgSystem*&)@Base" 0.8.0
 (c++)"safe_snprintf(char*, char*, char const*, ...)@Base" 0.8.0
 (c++)"stringcasecmp(__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const*, char const*)@Base" 0.8.0
 (c++)"stringcasecmp(__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >)@Base" 0.8.0
 (c++)"stringcasecmp(char const*, char const*, char const*, char const*)@Base" 0.8.0
 (c++)"tolower_ascii(int)@Base" 0.8.0
 (c++)"ParseQuoteWord(char const*&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"ReadConfigFile(Configuration&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&, unsigned int const&)@Base" 0.8.0
 (c++)"TokSplitString(char, char*, char**, unsigned long)@Base" 0.8.0
 (c++)"maybe_add_auth(URI&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgApplyStatus(pkgDepCache&)@Base" 0.8.0
 (c++)"pkgDistUpgrade(pkgDepCache&)@Base" 0.8.0
 (c++)"CheckDomainList(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"CreateDirectory(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"DirectoryExists(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"VectorizeString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const&)@Base" 0.8.0
 (c++)"pkgPrioSortList(pkgCache&, pkgCache::Version**)@Base" 0.8.0
 (c++)"FTPMDTMStrToTime(char const*, long&)@Base" 0.8.0
 (c++)"RFC1123StrToTime(char const*, long&)@Base" 0.8.0
 (c++)"pkgMakeStatusCache(pkgSourceList&, OpProgress&, MMap**, bool)@Base" 0.8.0
 (c++)"pkgMinimizeUpgrade(pkgDepCache&)@Base" 0.8.0
 (c++)"GetListOfFilesInDir(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool const&)@Base" 0.8.0
 (c++)"GetListOfFilesInDir(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&, bool const&)@Base" 0.8.0
 (c++)"pkgMakeStatusCacheMem(pkgSourceList&, OpProgress&)@Base" 0.8.0
 (c++)"pkgMakeOnlyStatusCache(OpProgress&, DynamicMMap**)@Base" 0.8.0
 (c++)"WaitFd(int, bool, unsigned long)@Base" 0.8.0
 (c++)"GetLock(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)@Base" 0.8.0
 (c++)"Hex2Num(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned char*, unsigned int)@Base" 0.8.0
 (c++)"CopyFile(FileFd&, FileFd&)@Base" 0.8.0
 (c++)"ExecFork()@Base" 0.8.0
 (c++)"ExecWait(int, char const*, bool)@Base" 0.8.0
 (c++)"StrToNum(char const*, unsigned long&, unsigned int, unsigned int)@Base" 0.8.0
 (c++)"SubstVar(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"SubstVar(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, SubstVar const*)@Base" 0.8.0
 (c++)"flNoLink(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"flNotDir(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"ioprintf(std::basic_ostream<char, std::char_traits<char> >&, char const*, ...)@Base" 0.8.0
 (c++)"IsMounted(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"LookupTag(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, char const*)@Base" 0.8.0
 (c++)"SizeToStr(double)@Base" 0.8.0
 (c++)"StrToTime(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long&)@Base" 0.8.0
 (c++)"TFRewrite(_IO_FILE*, pkgTagSection const&, char const**, TFRewriteData*)@Base" 0.8.0
 (c++)"TimeToStr(unsigned long)@Base" 0.8.0
 (c++)"_strstrip(char*)@Base" 0.8.0
 (c++)"flCombine(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"flNotFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"stringcmp(__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const*, char const*)@Base" 0.8.0
 (c++)"stringcmp(__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >)@Base" 0.8.0
 (c++)"stringcmp(char const*, char const*, char const*, char const*)@Base" 0.8.0
 (c++)"strprintf(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char const*, ...)@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::DepIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::GrpIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::PkgIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::PrvIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::VerIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::DescIterator>::toReMap@Base" 0.8.0
 (c++)"guard variable for pkgCacheGenerator::Dynamic<pkgCache::PkgFileIterator>::toReMap@Base" 0.8.0
 (c++)"HashString::SupportedHashes()@Base" 0.8.0
 (c++)"HashString::_SupportedHashes@Base" 0.8.0
 (c++)"HashString::HashString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"HashString::HashString(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"HashString::HashString()@Base" 0.8.0
 (c++)"HashString::~HashString()@Base" 0.8.0
 (c++)"OpProgress::CheckChange(float)@Base" 0.8.0
 (c++)"OpProgress::Done()@Base" 0.8.0
 (c++)"OpProgress::Update()@Base" 0.8.0
 (c++)"OpProgress::OpProgress()@Base" 0.8.0
 (c++)"OpProgress::~OpProgress()@Base" 0.8.0
 (c++)"SourceCopy::GetFileName()@Base" 0.8.0
 (c++)"SourceCopy::RewriteEntry(_IO_FILE*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"SourceCopy::Type()@Base" 0.8.0
 (c++)"SourceCopy::~SourceCopy()@Base" 0.8.0
 (c++)"pkgAcqFile::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqFile::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqFile::DescURI()@Base" 0.8.0
 (c++)"pkgAcqFile::HashSum()@Base" 0.8.0
 (c++)"pkgAcqFile::~pkgAcqFile()@Base" 0.8.0
 (c++)"pkgAcquire::WorkerStep(pkgAcquire::Worker*)@Base" 0.8.0
 (c++)"pkgAcquire::FetchNeeded()@Base" 0.8.0
 (c++)"pkgAcquire::TotalNeeded()@Base" 0.8.0
 (c++)"pkgAcquire::MethodConfig::MethodConfig()@Base" 0.8.0
 (c++)"pkgAcquire::PartialPresent()@Base" 0.8.0
 (c++)"pkgAcquire::Add(pkgAcquire::Item*)@Base" 0.8.0
 (c++)"pkgAcquire::Add(pkgAcquire::Worker*)@Base" 0.8.0
 (c++)"pkgAcquire::Run(int)@Base" 0.8.0
 (c++)"pkgAcquire::Bump()@Base" 0.8.0
 (c++)"pkgAcquire::Item::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcquire::Item::ReportMirrorFailure(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::Item::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcquire::Item::Rename(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::Item::HashSum()@Base" 0.8.0
 (c++)"pkgAcquire::Item::Finished()@Base" 0.8.0
 (c++)"pkgAcquire::Item::IsTrusted()@Base" 0.8.0
 (c++)"pkgAcquire::Item::ShortDesc()@Base" 0.8.0
 (c++)"pkgAcquire::Item::Item(pkgAcquire*)@Base" 0.8.0
 (c++)"pkgAcquire::Item::~Item()@Base" 0.8.0
 (c++)"pkgAcquire::Clean(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Bump()@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Cycle()@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Dequeue(pkgAcquire::Item*)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Enqueue(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Startup()@Base" 0.8.0
 (c++)"pkgAcquire::Queue::FindItem(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::Worker*)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::ItemDone(pkgAcquire::Queue::QItem*)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Shutdown(bool)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::Queue(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire*)@Base" 0.8.0
 (c++)"pkgAcquire::Queue::~Queue()@Base" 0.8.0
 (c++)"pkgAcquire::Setup(pkgAcquireStatus*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgAcquire::Remove(pkgAcquire::Item*)@Base" 0.8.0
 (c++)"pkgAcquire::Remove(pkgAcquire::Worker*)@Base" 0.8.0
 (c++)"pkgAcquire::RunFds(fd_set*, fd_set*)@Base" 0.8.0
 (c++)"pkgAcquire::SetFds(int&, fd_set*, fd_set*)@Base" 0.8.0
 (c++)"pkgAcquire::UriEnd()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::OutFdReady()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::MediaChange(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::Worker::RunMessages()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Capabilities(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::Worker::ReadMessages()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::MethodFailure()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::SendConfiguration()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Pulse()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Start()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::ItemDone()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Construct()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::InFdReady()@Base" 0.8.0
 (c++)"pkgAcquire::Worker::QueueItem(pkgAcquire::Queue::QItem*)@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Worker(pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcquire::Worker::Worker(pkgAcquire::Queue*, pkgAcquire::MethodConfig*, pkgAcquireStatus*)@Base" 0.8.0
 (c++)"pkgAcquire::Worker::~Worker()@Base" 0.8.0
 (c++)"pkgAcquire::Dequeue(pkgAcquire::Item*)@Base" 0.8.0
 (c++)"pkgAcquire::Enqueue(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquire::ItemDesc::~ItemDesc()@Base" 0.8.0
 (c++)"pkgAcquire::Shutdown()@Base" 0.8.0
 (c++)"pkgAcquire::UriBegin()@Base" 0.8.0
 (c++)"pkgAcquire::GetConfig(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcquire::QueueName(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig const*&)@Base" 0.8.0
 (c++)"pkgAcquire::pkgAcquire(pkgAcquireStatus*)@Base" 0.8.0
 (c++)"pkgAcquire::pkgAcquire()@Base" 0.8.0
 (c++)"pkgAcquire::~pkgAcquire()@Base" 0.8.0
 (c++)"pkgRecords::Lookup(pkgCache::VerFileIterator const&)@Base" 0.8.0
 (c++)"pkgRecords::Lookup(pkgCache::DescFileIterator const&)@Base" 0.8.0
 (c++)"pkgRecords::Parser::Maintainer()@Base" 0.8.0
 (c++)"pkgRecords::Parser::SHA256Hash()@Base" 0.8.0
 (c++)"pkgRecords::Parser::Name()@Base" 0.8.0
 (c++)"pkgRecords::Parser::GetRec(char const*&, char const*&)@Base" 0.8.0
 (c++)"pkgRecords::Parser::MD5Hash()@Base" 0.8.0
 (c++)"pkgRecords::Parser::FileName()@Base" 0.8.0
 (c++)"pkgRecords::Parser::Homepage()@Base" 0.8.0
 (c++)"pkgRecords::Parser::LongDesc()@Base" 0.8.0
 (c++)"pkgRecords::Parser::SHA1Hash()@Base" 0.8.0
 (c++)"pkgRecords::Parser::ShortDesc()@Base" 0.8.0
 (c++)"pkgRecords::Parser::SourcePkg()@Base" 0.8.0
 (c++)"pkgRecords::Parser::SourceVer()@Base" 0.8.0
 (c++)"pkgRecords::Parser::~Parser()@Base" 0.8.0
 (c++)"pkgRecords::pkgRecords(pkgCache&)@Base" 0.8.0
 (c++)"pkgRecords::~pkgRecords()@Base" 0.8.0
 (c++)"pkgTagFile::Fill()@Base" 0.8.0
 (c++)"pkgTagFile::Step(pkgTagSection&)@Base" 0.8.0
 (c++)"pkgTagFile::Resize()@Base" 0.8.0
 (c++)"pkgTagFile::~pkgTagFile()@Base" 0.8.0
 (c++)"CdromDevice::~CdromDevice()@Base" 0.8.0
 (c++)"CommandLine::DispatchArg(CommandLine::Dispatch*, bool)@Base" 0.8.0
 (c++)"CommandLine::SaveInConfig(unsigned int const&, char const* const*)@Base" 0.8.0
 (c++)"CommandLine::Parse(int, char const**)@Base" 0.8.0
 (c++)"CommandLine::HandleOpt(int&, int, char const**, char const*&, CommandLine::Args*, bool)@Base" 0.8.0
 (c++)"CommandLine::CommandLine(CommandLine::Args*, Configuration*)@Base" 0.8.0
 (c++)"CommandLine::~CommandLine()@Base" 0.8.0
 (c++)"DynamicMMap::WriteString(char const*, unsigned long)@Base" 0.8.0
 (c++)"DynamicMMap::Grow()@Base" 0.8.0
 (c++)"DynamicMMap::Allocate(unsigned long)@Base" 0.8.0
 (c++)"DynamicMMap::DynamicMMap(FileFd&, unsigned long, unsigned long const&, unsigned long const&, unsigned long const&)@Base" 0.8.0
 (c++)"DynamicMMap::DynamicMMap(unsigned long, unsigned long const&, unsigned long const&, unsigned long const&)@Base" 0.8.0
 (c++)"DynamicMMap::~DynamicMMap()@Base" 0.8.0
 (c++)"GlobalError::DumpErrors(std::basic_ostream<char, std::char_traits<char> >&, GlobalError::MsgType const&, bool const&)@Base" 0.8.0
 (c++)"GlobalError::PopMessage(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"GlobalError::InsertErrno(GlobalError::MsgType const&, char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::PushToStack()@Base" 0.8.0
 (c++)"GlobalError::RevertToStack()@Base" 0.8.0
 (c++)"GlobalError::MergeWithStack()@Base" 0.8.0
 (c++)"GlobalError::Debug(char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Errno(char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Error(char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Fatal(char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::DebugE(char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::FatalE(char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Insert(GlobalError::MsgType const&, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Notice(char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Discard()@Base" 0.8.0
 (c++)"GlobalError::NoticeE(char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::Warning(char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::WarningE(char const*, char const*, ...)@Base" 0.8.0
 (c++)"GlobalError::GlobalError()@Base" 0.8.0
 (c++)"PackageCopy::GetFileName()@Base" 0.8.0
 (c++)"PackageCopy::RewriteEntry(_IO_FILE*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"PackageCopy::Type()@Base" 0.8.0
 (c++)"PackageCopy::~PackageCopy()@Base" 0.8.0
 (c++)"pkgAcqIndex::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqIndex::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqIndex::DescURI()@Base" 0.8.0
 (c++)"pkgAcqIndex::HashSum()@Base" 0.8.0
 (c++)"pkgAcqIndex::pkgAcqIndex(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, HashString, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqIndex::~pkgAcqIndex()@Base" 0.8.0
 (c++)"pkgDepCache::IsDeleteOk(pkgCache::PkgIterator const&, bool, unsigned long, bool)@Base" 0.8.0
 (c++)"pkgDepCache::MarkDelete(pkgCache::PkgIterator const&, bool, unsigned long, bool)@Base" 0.8.0
 (c++)"pkgDepCache::StateCache::StripEpoch(char const*)@Base" 0.8.0
 (c++)"pkgDepCache::StateCache::Update(pkgCache::PkgIterator, pkgCache&)@Base" 0.8.0
 (c++)"pkgDepCache::ActionGroup::release()@Base" 0.8.0
 (c++)"pkgDepCache::ActionGroup::ActionGroup(pkgDepCache&)@Base" 0.8.0
 (c++)"pkgDepCache::ActionGroup::~ActionGroup()@Base" 0.8.0
 (c++)"pkgDepCache::IsInstallOk(pkgCache::PkgIterator const&, bool, unsigned long, bool)@Base" 0.8.0
 (c++)"pkgDepCache::MarkInstall(pkgCache::PkgIterator const&, bool, unsigned long, bool, bool)@Base" 0.8.0
 (c++)"pkgDepCache::MarkPackage(pkgCache::PkgIterator const&, pkgCache::VerIterator const&, bool const&, bool const&)@Base" 0.8.0
 (c++)"pkgDepCache::MarkRequired(pkgDepCache::InRootSetFunc&)@Base" 0.8.0
 (c++)"pkgDepCache::SetReInstall(pkgCache::PkgIterator const&, bool)@Base" 0.8.0
 (c++)"pkgDepCache::VersionState(pkgCache::DepIterator, unsigned char, unsigned char, unsigned char)@Base" 0.8.0
 (c++)"pkgDepCache::BuildGroupOrs(pkgCache::VerIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::InRootSetFunc::InRootSet(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::InRootSetFunc::~InRootSetFunc()@Base" 0.8.0
 (c++)"pkgDepCache::readStateFile(OpProgress*)@Base" 0.8.0
 (c++)"pkgDepCache::GetRootSetFunc()@Base" 0.8.0
 (c++)"pkgDepCache::UpdateVerState(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgDepCache::writeStateFile(OpProgress*, bool)@Base" 0.8.0
 (c++)"pkgDepCache::DependencyState(pkgCache::DepIterator&)@Base" 0.8.0
 (c++)"pkgDepCache::DefaultRootSetFunc::InRootSet(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::DefaultRootSetFunc::~DefaultRootSetFunc()@Base" 0.8.0
 (c++)"pkgDepCache::MarkFollowsSuggests()@Base" 0.8.0
 (c++)"pkgDepCache::MarkFollowsRecommends()@Base" 0.8.0
 (c++)"pkgDepCache::Init(OpProgress*)@Base" 0.8.0
 (c++)"pkgDepCache::Sweep()@Base" 0.8.0
 (c++)"pkgDepCache::Policy::IsImportantDep(pkgCache::DepIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::Policy::GetCandidateVer(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::Policy::~Policy()@Base" 0.8.0
 (c++)"pkgDepCache::Update(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgDepCache::Update(OpProgress*)@Base" 0.8.0
 (c++)"pkgDepCache::Update(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgDepCache::CheckDep(pkgCache::DepIterator, int, pkgCache::PkgIterator&)@Base" 0.8.0
 (c++)"pkgDepCache::MarkAuto(pkgCache::PkgIterator const&, bool)@Base" 0.8.0
 (c++)"pkgDepCache::MarkKeep(pkgCache::PkgIterator const&, bool, bool, unsigned long)@Base" 0.8.0
 (c++)"pkgDepCache::pkgDepCache(pkgCache*, pkgDepCache::Policy*)@Base" 0.8.0
 (c++)"pkgDepCache::~pkgDepCache()@Base" 0.8.0
 (c++)"pkgSimulate::ShortBreaks()@Base" 0.8.0
 (c++)"pkgSimulate::Policy::GetCandidateVer(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgSimulate::Policy::~Policy()@Base" 0.8.0
 (c++)"pkgSimulate::Remove(pkgCache::PkgIterator, bool)@Base" 0.8.0
 (c++)"pkgSimulate::Install(pkgCache::PkgIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgSimulate::Describe(pkgCache::PkgIterator, std::basic_ostream<char, std::char_traits<char> >&, bool, bool)@Base" 0.8.0
 (c++)"pkgSimulate::Configure(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgSimulate::pkgSimulate(pkgDepCache*)@Base" 0.8.0
 (c++)"pkgSimulate::~pkgSimulate()@Base" 0.8.0
 (c++)"debIFTypePkg::~debIFTypePkg()@Base" 0.8.0
 (c++)"debIFTypeSrc::~debIFTypeSrc()@Base" 0.8.0
 (c++)"debSLTypeDeb::~debSLTypeDeb()@Base" 0.8.0
 (c++)"indexRecords::Load(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"indexRecords::Lookup(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"indexRecords::MetaKeys()@Base" 0.8.0
 (c++)"indexRecords::indexRecords(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"indexRecords::indexRecords()@Base" 0.8.0
 (c++)"indexRecords::~indexRecords()@Base" 0.8.0
 (c++)"pkgAcqMethod::FetchResult::TakeHashes(Hashes&)@Base" 0.8.0
 (c++)"pkgAcqMethod::FetchResult::FetchResult()@Base" 0.8.0
 (c++)"pkgAcqMethod::Configuration(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqMethod::Log(char const*, ...)@Base" 0.8.0
 (c++)"pkgAcqMethod::Run(bool)@Base" 0.8.0
 (c++)"pkgAcqMethod::Exit()@Base" 0.8.0
 (c++)"pkgAcqMethod::Fail(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)@Base" 0.8.0
 (c++)"pkgAcqMethod::Fail(bool)@Base" 0.8.0
 (c++)"pkgAcqMethod::Fetch(pkgAcqMethod::FetchItem*)@Base" 0.8.0
 (c++)"pkgAcqMethod::Status(char const*, ...)@Base" 0.8.0
 (c++)"pkgAcqMethod::URIDone(pkgAcqMethod::FetchResult&, pkgAcqMethod::FetchResult*)@Base" 0.8.0
 (c++)"pkgAcqMethod::Redirect(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgAcqMethod::URIStart(pkgAcqMethod::FetchResult&)@Base" 0.8.0
 (c++)"pkgAcqMethod::MediaFail(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqMethod::pkgAcqMethod(char const*, unsigned long)@Base" 0.8.0
 (c++)"pkgAcqMethod::~pkgAcqMethod()@Base" 0.8.0
 (c++)"pkgCacheFile::BuildCaches(OpProgress*, bool)@Base" 0.8.0
 (c++)"pkgCacheFile::BuildPolicy(OpProgress*)@Base" 0.8.0
 (c++)"pkgCacheFile::BuildDepCache(OpProgress*)@Base" 0.8.0
 (c++)"pkgCacheFile::BuildSourceList(OpProgress*)@Base" 0.8.0
 (c++)"pkgCacheFile::Open(OpProgress*, bool)@Base" 0.8.0
 (c++)"pkgCacheFile::Close()@Base" 0.8.0
 (c++)"pkgCacheFile::pkgCacheFile()@Base" 0.8.0
 (c++)"pkgCacheFile::~pkgCacheFile()@Base" 0.8.0
 (c++)"pkgIndexFile::LanguageCode()@Base" 0.8.0
 (c++)"pkgIndexFile::CheckLanguageCode(char const*)@Base" 0.8.0
 (c++)"pkgIndexFile::TranslationsAvailable()@Base" 0.8.0
 (c++)"pkgIndexFile::Type::GlobalList@Base" 0.8.0
 (c++)"pkgIndexFile::Type::GlobalListLen@Base" 0.8.0
 (c++)"pkgIndexFile::Type::GetType(char const*)@Base" 0.8.0
 (c++)"pkgIndexFile::Type::Type()@Base" 0.8.0
 (c++)"pkgIndexFile::Type::~Type()@Base" 0.8.0
 (c++)"pkgIndexFile::~pkgIndexFile()@Base" 0.8.0
 (c++)"pkgOrderList::VisitRDeps(bool (pkgOrderList::*)(pkgCache::DepIterator), pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgOrderList::OrderUnpack(std::basic_string<char, std::char_traits<char>, std::allocator<char> >*)@Base" 0.8.0
 (c++)"pkgOrderList::DepConfigure(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::DepUnPackDep(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::DepUnPackPre(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::DepUnPackCrit(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::DepUnPackPreD(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::OrderCompareA(void const*, void const*)@Base" 0.8.0
 (c++)"pkgOrderList::OrderCompareB(void const*, void const*)@Base" 0.8.0
 (c++)"pkgOrderList::OrderCritical()@Base" 0.8.0
 (c++)"pkgOrderList::VisitProvides(pkgCache::DepIterator, bool)@Base" 0.8.0
 (c++)"pkgOrderList::OrderConfigure()@Base" 0.8.0
 (c++)"pkgOrderList::VisitRProvides(bool (pkgOrderList::*)(pkgCache::DepIterator), pkgCache::VerIterator)@Base" 0.8.0
 (c++)"pkgOrderList::Me@Base" 0.8.0
 (c++)"pkgOrderList::DoRun()@Base" 0.8.0
 (c++)"pkgOrderList::Score(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgOrderList::AddLoop(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::FileCmp(pkgCache::PkgIterator, pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgOrderList::CheckDep(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::DepRemove(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgOrderList::IsMissing(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgOrderList::VisitDeps(bool (pkgOrderList::*)(pkgCache::DepIterator), pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgOrderList::WipeFlags(unsigned long)@Base" 0.8.0
 (c++)"pkgOrderList::pkgOrderList(pkgDepCache*)@Base" 0.8.0
 (c++)"pkgOrderList::~pkgOrderList()@Base" 0.8.0
 (c++)"Configuration::MatchAgainstConfig::MatchAgainstConfig(char const*)@Base" 0.8.0
 (c++)"Configuration::MatchAgainstConfig::~MatchAgainstConfig()@Base" 0.8.0
 (c++)"Configuration::Set(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"Configuration::Set(char const*, int const&)@Base" 0.8.0
 (c++)"Configuration::Dump(std::basic_ostream<char, std::char_traits<char> >&)@Base" 0.8.0
 (c++)"Configuration::Clear(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"Configuration::Clear(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)@Base" 0.8.0
 (c++)"Configuration::Clear(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"Configuration::CndSet(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"Configuration::Lookup(char const*, bool const&)@Base" 0.8.0
 (c++)"Configuration::Lookup(Configuration::Item*, char const*, unsigned long const&, bool const&)@Base" 0.8.0
 (c++)"Configuration::Configuration(Configuration::Item const*)@Base" 0.8.0
 (c++)"Configuration::Configuration()@Base" 0.8.0
 (c++)"Configuration::~Configuration()@Base" 0.8.0
 (c++)"WeakPointable::~WeakPointable()@Base" 0.8.0
 (c++)"debListParser::NewVersion(pkgCache::VerIterator&)@Base" 0.8.0
 (c++)"debListParser::UsePackage(pkgCache::PkgIterator&, pkgCache::VerIterator&)@Base" 0.8.0
 (c++)"debListParser::Description()@Base" 0.8.0
 (c++)"debListParser::ParseStatus(pkgCache::PkgIterator&, pkgCache::VerIterator&)@Base" 0.8.0
 (c++)"debListParser::VersionHash()@Base" 0.8.0
 (c++)"debListParser::Architecture()@Base" 0.8.0
 (c++)"debListParser::ParseDepends(char const*, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&, bool const&, bool const&)@Base" 0.8.0
 (c++)"debListParser::ParseDepends(pkgCache::VerIterator&, char const*, unsigned int)@Base" 0.8.0
 (c++)"debListParser::ParseProvides(pkgCache::VerIterator&)@Base" 0.8.0
 (c++)"debListParser::ArchitectureAll()@Base" 0.8.0
 (c++)"debListParser::ConvertRelation(char const*, unsigned int&)@Base" 0.8.0
 (c++)"debListParser::Description_md5()@Base" 0.8.0
 (c++)"debListParser::LoadReleaseInfo(pkgCache::PkgFileIterator&, FileFd&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"debListParser::UniqFindTagWrite(char const*)@Base" 0.8.0
 (c++)"debListParser::DescriptionLanguage()@Base" 0.8.0
 (c++)"debListParser::Size()@Base" 0.8.0
 (c++)"debListParser::Step()@Base" 0.8.0
 (c++)"debListParser::Offset()@Base" 0.8.0
 (c++)"debListParser::GetPrio(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"debListParser::Package()@Base" 0.8.0
 (c++)"debListParser::Version()@Base" 0.8.0
 (c++)"debListParser::GrabWord(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, debListParser::WordList*, unsigned char&)@Base" 0.8.0
 (c++)"debListParser::debListParser(FileFd*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"debListParser::~debListParser()@Base" 0.8.0
 (c++)"pkgAcqArchive::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqArchive::DescURI()@Base" 0.8.0
 (c++)"pkgAcqArchive::HashSum()@Base" 0.8.0
 (c++)"pkgAcqArchive::Finished()@Base" 0.8.0
 (c++)"pkgAcqArchive::IsTrusted()@Base" 0.8.0
 (c++)"pkgAcqArchive::QueueNext()@Base" 0.8.0
 (c++)"pkgAcqArchive::ShortDesc()@Base" 0.8.0
 (c++)"pkgAcqArchive::pkgAcqArchive(pkgAcquire*, pkgSourceList*, pkgRecords*, pkgCache::VerIterator const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"pkgAcqArchive::~pkgAcqArchive()@Base" 0.8.0
 (c++)"pkgAcqMetaSig::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqMetaSig::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqMetaSig::DescURI()@Base" 0.8.0
 (c++)"pkgAcqMetaSig::~pkgAcqMetaSig()@Base" 0.8.0
 (c++)"pkgSourceList::ReadAppend(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgSourceList::ReadMainList()@Base" 0.8.0
 (c++)"pkgSourceList::ReadSourceDir(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgSourceList::Read(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgSourceList::Type::GlobalList@Base" 0.8.0
 (c++)"pkgSourceList::Type::GlobalListLen@Base" 0.8.0
 (c++)"pkgSourceList::Type::GetType(char const*)@Base" 0.8.0
 (c++)"pkgSourceList::Type::Type()@Base" 0.8.0
 (c++)"pkgSourceList::Type::~Type()@Base" 0.8.0
 (c++)"pkgSourceList::Reset()@Base" 0.8.0
 (c++)"pkgSourceList::pkgSourceList(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgSourceList::pkgSourceList()@Base" 0.8.0
 (c++)"pkgSourceList::~pkgSourceList()@Base" 0.8.0
 (c++)"pkgSrcRecords::File::~File()@Base" 0.8.0
 (c++)"pkgSrcRecords::Find(char const*, bool const&)@Base" 0.8.0
 (c++)"pkgSrcRecords::Parser::BuildDepRec::~BuildDepRec()@Base" 0.8.0
 (c++)"pkgSrcRecords::Parser::BuildDepType(unsigned char const&)@Base" 0.8.0
 (c++)"pkgSrcRecords::Parser::~Parser()@Base" 0.8.0
 (c++)"pkgSrcRecords::Restart()@Base" 0.8.0
 (c++)"pkgSrcRecords::pkgSrcRecords(pkgSourceList&)@Base" 0.8.0
 (c++)"pkgSrcRecords::~pkgSrcRecords()@Base" 0.8.0
 (c++)"pkgTagSection::TrimRecord(bool, char const*&)@Base" 0.8.0
 (c++)"pkgTagSection::Scan(char const*, unsigned long)@Base" 0.8.0
 (c++)"pkgTagSection::Trim()@Base" 0.8.0
 (c++)"pkgVendorList::CreateList(Configuration&)@Base" 0.8.0
 (c++)"pkgVendorList::FindVendor(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)@Base" 0.8.0
 (c++)"pkgVendorList::ReadMainList()@Base" 0.8.0
 (c++)"pkgVendorList::LookupFingerprint(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgVendorList::Read(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgVendorList::~pkgVendorList()@Base" 0.8.0
 (c++)"OpTextProgress::Done()@Base" 0.8.0
 (c++)"OpTextProgress::Write(char const*)@Base" 0.8.0
 (c++)"OpTextProgress::Update()@Base" 0.8.0
 (c++)"OpTextProgress::OpTextProgress(Configuration&)@Base" 0.8.0
 (c++)"OpTextProgress::~OpTextProgress()@Base" 0.8.0
 (c++)"debIFTypeTrans::~debIFTypeTrans()@Base" 0.8.0
 (c++)"debStatusIndex::debStatusIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"debStatusIndex::~debStatusIndex()@Base" 0.8.0
 (c++)"debIFTypeStatus::~debIFTypeStatus()@Base" 0.8.0
 (c++)"debRecordParser::Maintainer()@Base" 0.8.0
 (c++)"debRecordParser::SHA256Hash()@Base" 0.8.0
 (c++)"debRecordParser::Jump(pkgCache::VerFileIterator const&)@Base" 0.8.0
 (c++)"debRecordParser::Jump(pkgCache::DescFileIterator const&)@Base" 0.8.0
 (c++)"debRecordParser::Name()@Base" 0.8.0
 (c++)"debRecordParser::GetRec(char const*&, char const*&)@Base" 0.8.0
 (c++)"debRecordParser::MD5Hash()@Base" 0.8.0
 (c++)"debRecordParser::FileName()@Base" 0.8.0
 (c++)"debRecordParser::Homepage()@Base" 0.8.0
 (c++)"debRecordParser::LongDesc()@Base" 0.8.0
 (c++)"debRecordParser::SHA1Hash()@Base" 0.8.0
 (c++)"debRecordParser::ShortDesc()@Base" 0.8.0
 (c++)"debRecordParser::SourcePkg()@Base" 0.8.0
 (c++)"debRecordParser::SourceVer()@Base" 0.8.0
 (c++)"debRecordParser::debRecordParser(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgCache&)@Base" 0.8.0
 (c++)"debRecordParser::~debRecordParser()@Base" 0.8.0
 (c++)"debReleaseIndex::GetIndexFiles()@Base" 0.8.0
 (c++)"debReleaseIndex::debSectionEntry::debSectionEntry(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&)@Base" 0.8.0
 (c++)"debReleaseIndex::PushSectionEntry(debReleaseIndex::debSectionEntry const*)@Base" 0.8.0
 (c++)"debReleaseIndex::PushSectionEntry(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, debReleaseIndex::debSectionEntry const*)@Base" 0.8.0
 (c++)"debReleaseIndex::PushSectionEntry(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, debReleaseIndex::debSectionEntry const*)@Base" 0.8.0
 (c++)"debReleaseIndex::debReleaseIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"debReleaseIndex::~debReleaseIndex()@Base" 0.8.0
 (c++)"debSLTypeDebSrc::~debSLTypeDebSrc()@Base" 0.8.0
 (c++)"debSLTypeDebian::~debSLTypeDebian()@Base" 0.8.0
 (c++)"debSourcesIndex::debSourcesIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)@Base" 0.8.0
 (c++)"debSourcesIndex::~debSourcesIndex()@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::ParseDiffIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::DescURI()@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::pkgAcqDiffIndex(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, HashString)@Base" 0.8.0
 (c++)"pkgAcqDiffIndex::~pkgAcqDiffIndex()@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::QueueIndexes(bool)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::VerifyVendor(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::RetrievalDone(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::DescURI()@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::AuthDone(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::pkgAcqMetaIndex(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<IndexTarget*, std::allocator<IndexTarget*> > const*, indexRecords*)@Base" 0.8.0
 (c++)"pkgAcqMetaIndex::~pkgAcqMetaIndex()@Base" 0.8.0
 (c++)"pkgVersionMatch::ExpressionMatches(char const*, char const*)@Base" 0.8.0
 (c++)"pkgVersionMatch::ExpressionMatches(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)@Base" 0.8.0
 (c++)"pkgVersionMatch::Find(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgVersionMatch::MatchVer(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)@Base" 0.8.0
 (c++)"pkgVersionMatch::FileMatch(pkgCache::PkgFileIterator)@Base" 0.8.0
 (c++)"pkgVersionMatch::pkgVersionMatch(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgVersionMatch::MatchType)@Base" 0.8.0
 (c++)"pkgVersionMatch::~pkgVersionMatch()@Base" 0.8.0
 (c++)"TranslationsCopy::CopyTranslations(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, pkgCdromStatus*)@Base" 0.8.0
 (c++)"debPackagesIndex::debPackagesIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"debPackagesIndex::~debPackagesIndex()@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::QueueNextDiff()@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::Finish(bool)@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::DescURI()@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::pkgAcqIndexDiffs(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, HashString, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<DiffInfo, std::allocator<DiffInfo> >)@Base" 0.8.0
 (c++)"pkgAcqIndexDiffs::~pkgAcqIndexDiffs()@Base" 0.8.0
 (c++)"pkgAcqIndexTrans::Custom600Headers()@Base" 0.8.0
 (c++)"pkgAcqIndexTrans::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.0
 (c++)"pkgAcqIndexTrans::pkgAcqIndexTrans(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgAcqIndexTrans::~pkgAcqIndexTrans()@Base" 0.8.0
 (c++)"pkgAcquireStatus::Done(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquireStatus::Fail(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquireStatus::Stop()@Base" 0.8.0
 (c++)"pkgAcquireStatus::Fetch(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquireStatus::Pulse(pkgAcquire*)@Base" 0.8.0
 (c++)"pkgAcquireStatus::Start()@Base" 0.8.0
 (c++)"pkgAcquireStatus::IMSHit(pkgAcquire::ItemDesc&)@Base" 0.8.0
 (c++)"pkgAcquireStatus::pkgAcquireStatus()@Base" 0.8.0
 (c++)"pkgAcquireStatus::~pkgAcquireStatus()@Base" 0.8.0
 (c++)"PreferenceSection::TrimRecord(bool, char const*&)@Base" 0.8.0
 (c++)"pkgArchiveCleaner::Go(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgCache&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::ListParser::NewDepends(pkgCache::VerIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, unsigned int)@Base" 0.8.0
 (c++)"pkgCacheGenerator::ListParser::NewProvides(pkgCache::VerIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::ListParser::CollectFileProvides(pkgCache&, pkgCache::VerIterator&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::ListParser::~ListParser()@Base" 0.8.0
 (c++)"pkgCacheGenerator::NewFileVer(pkgCache::VerIterator&, pkgCacheGenerator::ListParser&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::NewPackage(pkgCache::PkgIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::NewVersion(pkgCache::VerIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)@Base" 0.8.0
 (c++)"pkgCacheGenerator::SelectFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pkgIndexFile const&, unsigned long)@Base" 0.8.0
 (c++)"pkgCacheGenerator::FinishCache(OpProgress*)@Base" 0.8.0
 (c++)"pkgCacheGenerator::NewFileDesc(pkgCache::DescIterator&, pkgCacheGenerator::ListParser&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::AllocateInMap(unsigned long const&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::MakeStatusCache(pkgSourceList&, OpProgress*, MMap**, bool)@Base" 0.8.0
 (c++)"pkgCacheGenerator::WriteUniqString(char const*, unsigned int)@Base" 0.8.0
 (c++)"pkgCacheGenerator::WriteStringInMap(char const*)@Base" 0.8.0
 (c++)"pkgCacheGenerator::WriteStringInMap(char const*, unsigned long const&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::CreateDynamicMMap(FileFd*, unsigned long)@Base" 0.8.0
 (c++)"pkgCacheGenerator::MergeFileProvides(pkgCacheGenerator::ListParser&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::MakeOnlyStatusCache(OpProgress*, DynamicMMap**)@Base" 0.8.0
 (c++)"pkgCacheGenerator::ReMap(void const*, void const*)@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::DepIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::GrpIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::PkgIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::PrvIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::VerIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::DescIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::Dynamic<pkgCache::PkgFileIterator>::toReMap@Base" 0.8.0
 (c++)"pkgCacheGenerator::NewGroup(pkgCache::GrpIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCacheGenerator::MergeList(pkgCacheGenerator::ListParser&, pkgCache::VerIterator*)@Base" 0.8.0
 (c++)"pkgCacheGenerator::pkgCacheGenerator(DynamicMMap*, OpProgress*)@Base" 0.8.0
 (c++)"pkgCacheGenerator::~pkgCacheGenerator()@Base" 0.8.0
 (c++)"pkgPackageManager::FixMissing()@Base" 0.8.0
 (c++)"pkgPackageManager::EarlyRemove(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::GetArchives(pkgAcquire*, pkgSourceList*, pkgRecords*)@Base" 0.8.0
 (c++)"pkgPackageManager::SmartRemove(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::SmartUnPack(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::ConfigureAll()@Base" 0.8.0
 (c++)"pkgPackageManager::ImmediateAdd(pkgCache::PkgIterator, bool, unsigned int const&)@Base" 0.8.0
 (c++)"pkgPackageManager::OrderInstall()@Base" 0.8.0
 (c++)"pkgPackageManager::DepAlwaysTrue(pkgCache::DepIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::SmartConfigure(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::CheckRConflicts(pkgCache::PkgIterator, pkgCache::DepIterator, char const*)@Base" 0.8.0
 (c++)"pkgPackageManager::CreateOrderList()@Base" 0.8.0
 (c++)"pkgPackageManager::DoInstallPostFork(int)@Base" 0.8.0
 (c++)"pkgPackageManager::Go(int)@Base" 0.8.0
 (c++)"pkgPackageManager::Reset()@Base" 0.8.0
 (c++)"pkgPackageManager::DepAdd(pkgOrderList&, pkgCache::PkgIterator, int)@Base" 0.8.0
 (c++)"pkgPackageManager::Remove(pkgCache::PkgIterator, bool)@Base" 0.8.0
 (c++)"pkgPackageManager::Install(pkgCache::PkgIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgPackageManager::Configure(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgPackageManager::DoInstall(int)@Base" 0.8.0
 (c++)"pkgPackageManager::pkgPackageManager(pkgDepCache*)@Base" 0.8.0
 (c++)"pkgPackageManager::~pkgPackageManager()@Base" 0.8.0
 (c++)"debSrcRecordParser::BuildDepends(std::vector<pkgSrcRecords::Parser::BuildDepRec, std::allocator<pkgSrcRecords::Parser::BuildDepRec> >&, bool const&, bool const&)@Base" 0.8.0
 (c++)"debSrcRecordParser::Jump(unsigned long const&)@Base" 0.8.0
 (c++)"debSrcRecordParser::Step()@Base" 0.8.0
 (c++)"debSrcRecordParser::AsStr()@Base" 0.8.0
 (c++)"debSrcRecordParser::Files(std::vector<pkgSrcRecords::File, std::allocator<pkgSrcRecords::File> >&)@Base" 0.8.0
 (c++)"debSrcRecordParser::Offset()@Base" 0.8.0
 (c++)"debSrcRecordParser::Restart()@Base" 0.8.0
 (c++)"debSrcRecordParser::Binaries()@Base" 0.8.0
 (c++)"debSrcRecordParser::~debSrcRecordParser()@Base" 0.8.0
 (c++)"pkgProblemResolver::MakeScores()@Base" 0.8.0
 (c++)"pkgProblemResolver::ResolveByKeep()@Base" 0.8.0
 (c++)"pkgProblemResolver::InstallProtect()@Base" 0.8.0
 (c++)"pkgProblemResolver::This@Base" 0.8.0
 (c++)"pkgProblemResolver::Resolve(bool)@Base" 0.8.0
 (c++)"pkgProblemResolver::DoUpgrade(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgProblemResolver::ScoreSort(void const*, void const*)@Base" 0.8.0
 (c++)"pkgProblemResolver::pkgProblemResolver(pkgDepCache*)@Base" 0.8.0
 (c++)"pkgProblemResolver::~pkgProblemResolver()@Base" 0.8.0
 (c++)"debVersioningSystem::CmpFragment(char const*, char const*, char const*, char const*)@Base" 0.8.0
 (c++)"debVersioningSystem::DoCmpVersion(char const*, char const*, char const*, char const*)@Base" 0.8.0
 (c++)"debVersioningSystem::DoCmpReleaseVer(char const*, char const*, char const*, char const*)@Base" 0.8.0
 (c++)"debVersioningSystem::UpstreamVersion(char const*)@Base" 0.8.0
 (c++)"debVersioningSystem::CheckDep(char const*, int, char const*)@Base" 0.8.0
 (c++)"debVersioningSystem::debVersioningSystem()@Base" 0.8.0
 (c++)"debVersioningSystem::~debVersioningSystem()@Base" 0.8.0
 (c++)"pkgUdevCdromDevices::Scan()@Base" 0.8.0
 (c++)"pkgUdevCdromDevices::Dlopen()@Base" 0.8.0
 (c++)"pkgUdevCdromDevices::pkgUdevCdromDevices()@Base" 0.8.0
 (c++)"pkgUdevCdromDevices::~pkgUdevCdromDevices()@Base" 0.8.0
 (c++)"pkgVersioningSystem::GlobalList@Base" 0.8.0
 (c++)"pkgVersioningSystem::GlobalListLen@Base" 0.8.0
 (c++)"pkgVersioningSystem::TestCompatibility(pkgVersioningSystem const&)@Base" 0.8.0
 (c++)"pkgVersioningSystem::GetVS(char const*)@Base" 0.8.0
 (c++)"pkgVersioningSystem::pkgVersioningSystem()@Base" 0.8.0
 (c++)"pkgVersioningSystem::~pkgVersioningSystem()@Base" 0.8.0
 (c++)"debTranslationsIndex::debTranslationsIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)@Base" 0.8.0
 (c++)"debTranslationsIndex::~debTranslationsIndex()@Base" 0.8.0
 (c++)"APT::PackageSet::FromString(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::FromCommandLine(pkgCacheFile&, char const**, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::GroupedFromCommandLine(pkgCacheFile&, char const**, std::list<APT::PackageSet::Modifier, std::allocator<APT::PackageSet::Modifier> > const&, unsigned short const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::FromName(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::FromTask(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::FromRegEx(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::PackageSet::~PackageSet()@Base" 0.8.0
 (c++)"APT::VersionSet::FromString(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, APT::VersionSet::Version const&, APT::CacheSetHelper&, bool const&)@Base" 0.8.0
 (c++)"APT::VersionSet::FromPackage(pkgCacheFile&, pkgCache::PkgIterator const&, APT::VersionSet::Version const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::VersionSet::FromCommandLine(pkgCacheFile&, char const**, APT::VersionSet::Version const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::VersionSet::getCandidateVer(pkgCacheFile&, pkgCache::PkgIterator const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::VersionSet::getInstalledVer(pkgCacheFile&, pkgCache::PkgIterator const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::VersionSet::GroupedFromCommandLine(pkgCacheFile&, char const**, std::list<APT::VersionSet::Modifier, std::allocator<APT::VersionSet::Modifier> > const&, unsigned short const&, APT::CacheSetHelper&)@Base" 0.8.0
 (c++)"APT::VersionSet::~VersionSet()@Base" 0.8.0
 (c++)"APT::CacheFilter::PackageNameMatchesRegEx::PackageNameMatchesRegEx(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::CacheFilter::PackageNameMatchesRegEx::~PackageNameMatchesRegEx()@Base" 0.8.0
 (c++)"APT::CacheFilter::PackageNameMatchesRegEx::operator()(pkgCache::GrpIterator const&)@Base" 0.8.0
 (c++)"APT::CacheFilter::PackageNameMatchesRegEx::operator()(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::Configuration::getLanguages(bool const&, bool const&, char const**)@Base" 0.8.0
 (c++)"APT::Configuration::getArchitectures(bool const&)@Base" 0.8.0
 (c++)"APT::Configuration::checkArchitecture(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::Configuration::getCompressionTypes(bool const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindTask(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindRegEx(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindAllVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindPackage(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindPkgName(pkgCacheFile&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::showTaskSelection(APT::PackageSet const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::showRegExSelection(APT::PackageSet const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindNewestVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::showSelectedVersion(pkgCache::PkgIterator const&, pkgCache::VerIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindCandInstVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindInstCandVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindCandidateVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::canNotFindInstalledVer(pkgCacheFile&, pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"APT::CacheSetHelper::~CacheSetHelper()@Base" 0.8.0
 (c++)"URI::NoUserPassword(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"URI::CopyFrom(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"URI::SiteOnly(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"URI::~URI()@Base" 0.8.0
 (c++)"URI::operator std::basic_string<char, std::char_traits<char>, std::allocator<char> >()@Base" 0.8.0
 (c++)"MMap::Map(FileFd&)@Base" 0.8.0
 (c++)"MMap::Sync(unsigned long, unsigned long)@Base" 0.8.0
 (c++)"MMap::Sync()@Base" 0.8.0
 (c++)"MMap::Close(bool)@Base" 0.8.0
 (c++)"MMap::MMap(FileFd&, unsigned long)@Base" 0.8.0
 (c++)"MMap::MMap(unsigned long)@Base" 0.8.0
 (c++)"MMap::~MMap()@Base" 0.8.0
 (c++)"FileFd::OpenDescriptor(int, FileFd::OpenMode, bool)@Base" 0.8.0
 (c++)"FileFd::Open(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, FileFd::OpenMode, unsigned long)@Base" 0.8.0
 (c++)"FileFd::Size()@Base" 0.8.0
 (c++)"FileFd::Sync()@Base" 0.8.0
 (c++)"FileFd::Tell()@Base" 0.8.0
 (c++)"FileFd::Close()@Base" 0.8.0
 (c++)"FileFd::~FileFd()@Base" 0.8.0
 (c++)"Vendor::CheckDist(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"Vendor::Vendor(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Vendor::Fingerprint*, std::allocator<Vendor::Fingerprint*> >*)@Base" 0.8.0
 (c++)"Vendor::~Vendor()@Base" 0.8.0
 (c++)"DiffInfo::~DiffInfo()@Base" 0.8.0
 (c++)"pkgCache::CompTypeDeb(unsigned char)@Base" 0.8.0
 (c++)"pkgCache::DepIterator::GlobOr(pkgCache::DepIterator&, pkgCache::DepIterator&)@Base" 0.8.0
 (c++)"pkgCache::DepIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::DepIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::PrvIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::PrvIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::VerIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::VerIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::DescIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::DescIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::PkgFileIterator::IsOk()@Base" 0.8.0
 (c++)"pkgCache::PkgFileIterator::RelStr()@Base" 0.8.0
 (c++)"pkgCache::PkgFileIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::PkgFileIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::VerFileIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::VerFileIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::DescFileIterator::operator++(int)@Base" 0.8.0
 (c++)"pkgCache::DescFileIterator::operator++()@Base" 0.8.0
 (c++)"pkgCache::SingleArchFindPkg(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCache::ReMap(bool const&)@Base" 0.8.0
 (c++)"pkgCache::Header::Header()@Base" 0.8.0
 (c++)"pkgCache::DepType(unsigned char)@Base" 0.8.0
 (c++)"pkgCache::FindGrp(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCache::FindPkg(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCache::FindPkg(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgCache::CompType(unsigned char)@Base" 0.8.0
 (c++)"pkgCache::Priority(unsigned char)@Base" 0.8.0
 (c++)"pkgCache::pkgCache(MMap*, bool)@Base" 0.8.0
 (c++)"pkgCache::~pkgCache()@Base" 0.8.0
 (c++)"pkgCdrom::DropRepeats(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, char const*)@Base" 0.8.0
 (c++)"pkgCdrom::FindPackages(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, pkgCdromStatus*, unsigned int)@Base" 0.8.0
 (c++)"pkgCdrom::WriteDatabase(Configuration&)@Base" 0.8.0
 (c++)"pkgCdrom::DropBinaryArch(std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)@Base" 0.8.0
 (c++)"pkgCdrom::WriteSourceList(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool)@Base" 0.8.0
 (c++)"pkgCdrom::ReduceSourcelist(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)@Base" 0.8.0
 (c++)"pkgCdrom::Add(pkgCdromStatus*)@Base" 0.8.0
 (c++)"pkgCdrom::Ident(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, pkgCdromStatus*)@Base" 0.8.0
 (c++)"pkgCdrom::Score(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"IndexCopy::CopyPackages(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, pkgCdromStatus*)@Base" 0.8.0
 (c++)"IndexCopy::ReconstructChop(unsigned long&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"IndexCopy::ReconstructPrefix(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"IndexCopy::ConvertToSourceList(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"IndexCopy::ChopDirs(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int)@Base" 0.8.0
 (c++)"IndexCopy::GrabFirst(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int)@Base" 0.8.0
 (c++)"IndexCopy::~IndexCopy()@Base" 0.8.0
 (c++)"SigVerify::CopyAndVerify(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)@Base" 0.8.0
 (c++)"SigVerify::CopyMetaIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"SigVerify::Verify(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, indexRecords*)@Base" 0.8.0
 (c++)"SigVerify::RunGPGV(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&, int*)@Base" 0.8.0
 (c++)"debSystem::Initialize(Configuration&)@Base" 0.8.0
 (c++)"debSystem::CheckUpdates()@Base" 0.8.0
 (c++)"debSystem::AddStatusFiles(std::vector<pkgIndexFile*, std::allocator<pkgIndexFile*> >&)@Base" 0.8.0
 (c++)"debSystem::ArchiveSupported(char const*)@Base" 0.8.0
 (c++)"debSystem::Lock()@Base" 0.8.0
 (c++)"debSystem::Score(Configuration const&)@Base" 0.8.0
 (c++)"debSystem::UnLock(bool)@Base" 0.8.0
 (c++)"debSystem::debSystem()@Base" 0.8.0
 (c++)"debSystem::~debSystem()@Base" 0.8.0
 (c++)"metaIndex::~metaIndex()@Base" 0.8.0
 (c++)"pkgDPkgPM::SendV2Pkgs(_IO_FILE*)@Base" 0.8.0
 (c++)"pkgDPkgPM::DoTerminalPty(int)@Base" 0.8.0
 (c++)"pkgDPkgPM::DoDpkgStatusFd(int, int)@Base" 0.8.0
 (c++)"pkgDPkgPM::WriteHistoryTag(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgDPkgPM::WriteApportReport(char const*, char const*)@Base" 0.8.0
 (c++)"pkgDPkgPM::RunScriptsWithPkgs(char const*)@Base" 0.8.0
 (c++)"pkgDPkgPM::ProcessDpkgStatusLine(int, char*)@Base" 0.8.0
 (c++)"pkgDPkgPM::handleDisappearAction(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.0
 (c++)"pkgDPkgPM::Go(int)@Base" 0.8.0
 (c++)"pkgDPkgPM::Reset()@Base" 0.8.0
 (c++)"pkgDPkgPM::Remove(pkgCache::PkgIterator, bool)@Base" 0.8.0
 (c++)"pkgDPkgPM::DoStdin(int)@Base" 0.8.0
 (c++)"pkgDPkgPM::Install(pkgCache::PkgIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"pkgDPkgPM::OpenLog()@Base" 0.8.0
 (c++)"pkgDPkgPM::CloseLog()@Base" 0.8.0
 (c++)"pkgDPkgPM::Configure(pkgCache::PkgIterator)@Base" 0.8.0
 (c++)"pkgDPkgPM::pkgDPkgPM(pkgDepCache*)@Base" 0.8.0
 (c++)"pkgDPkgPM::~pkgDPkgPM()@Base" 0.8.0
 (c++)"pkgPolicy::GetPriority(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgPolicy::InitDefaults()@Base" 0.8.0
 (c++)"pkgPolicy::GetCandidateVer(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgPolicy::PkgPin::~PkgPin()@Base" 0.8.0
 (c++)"pkgPolicy::GetMatch(pkgCache::PkgIterator const&)@Base" 0.8.0
 (c++)"pkgPolicy::CreatePin(pkgVersionMatch::MatchType, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, short)@Base" 0.8.0
 (c++)"pkgPolicy::pkgPolicy(pkgCache*)@Base" 0.8.0
 (c++)"pkgPolicy::~pkgPolicy()@Base" 0.8.0
 (c++)"pkgSystem::GlobalList@Base" 0.8.0
 (c++)"pkgSystem::Initialize(Configuration&)@Base" 0.8.0
 (c++)"pkgSystem::GlobalListLen@Base" 0.8.0
 (c++)"pkgSystem::Score(Configuration const&)@Base" 0.8.0
 (c++)"pkgSystem::GetSystem(char const*)@Base" 0.8.0
 (c++)"pkgSystem::pkgSystem()@Base" 0.8.0
 (c++)"pkgSystem::~pkgSystem()@Base" 0.8.0
 (c++)"HashString::VerifyFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"HashString::empty() const@Base" 0.8.0
 (c++)"HashString::toStr() const@Base" 0.8.0
 (c++)"CommandLine::FileSize() const@Base" 0.8.0
 (c++)"GlobalError::empty(GlobalError::MsgType const&) const@Base" 0.8.0
 (c++)"debIFTypePkg::CreatePkgParser(pkgCache::PkgFileIterator) const@Base" 0.8.0
 (c++)"debSLTypeDeb::CreateItem(std::vector<metaIndex*, std::allocator<metaIndex*> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) const@Base" 0.8.0
 (c++)"indexRecords::GetValidUntil() const@Base" 0.8.0
 (c++)"indexRecords::GetExpectedDist() const@Base" 0.8.0
 (c++)"indexRecords::Exists(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"indexRecords::GetDist() const@Base" 0.8.0
 (c++)"indexRecords::CheckDist(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"pkgIndexFile::ArchiveURI(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"pkgIndexFile::SourceInfo(pkgSrcRecords::Parser const&, pkgSrcRecords::File const&) const@Base" 0.8.0
 (c++)"pkgIndexFile::ArchiveInfo(pkgCache::VerIterator) const@Base" 0.8.0
 (c++)"pkgIndexFile::FindInCache(pkgCache&) const@Base" 0.8.0
 (c++)"pkgIndexFile::CreateSrcParser() const@Base" 0.8.0
 (c++)"pkgIndexFile::MergeFileProvides(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.0
 (c++)"pkgIndexFile::MergeFileProvides(pkgCacheGenerator&, OpProgress&) const@Base" 0.8.0
 (c++)"pkgIndexFile::Type::CreatePkgParser(pkgCache::PkgFileIterator) const@Base" 0.8.0
 (c++)"pkgIndexFile::Merge(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.0
 (c++)"pkgIndexFile::Merge(pkgCacheGenerator&, OpProgress&) const@Base" 0.8.0
 (c++)"Configuration::FindVector(char const*) const@Base" 0.8.0
 (c++)"Configuration::MatchAgainstConfig::Match(char const*) const@Base" 0.8.0
 (c++)"Configuration::Find(char const*, char const*) const@Base" 0.8.0
 (c++)"Configuration::Item::FullTag(Configuration::Item const*) const@Base" 0.8.0
 (c++)"Configuration::FindB(char const*, bool const&) const@Base" 0.8.0
 (c++)"Configuration::FindI(char const*, int const&) const@Base" 0.8.0
 (c++)"Configuration::Exists(char const*) const@Base" 0.8.0
 (c++)"Configuration::FindAny(char const*, char const*) const@Base" 0.8.0
 (c++)"Configuration::FindDir(char const*, char const*) const@Base" 0.8.0
 (c++)"Configuration::FindFile(char const*, char const*) const@Base" 0.8.0
 (c++)"Configuration::ExistsAny(char const*) const@Base" 0.8.0
 (c++)"pkgSourceList::GetIndexes(pkgAcquire*, bool) const@Base" 0.8.0
 (c++)"pkgSourceList::Type::FixupURI(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const@Base" 0.8.0
 (c++)"pkgSourceList::Type::ParseLine(std::vector<metaIndex*, std::allocator<metaIndex*> >&, char const*, unsigned long const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"pkgSourceList::FindIndex(pkgCache::PkgFileIterator, pkgIndexFile*&) const@Base" 0.8.0
 (c++)"pkgTagSection::Find(char const*, char const*&, char const*&) const@Base" 0.8.0
 (c++)"pkgTagSection::Find(char const*, unsigned int&) const@Base" 0.8.0
 (c++)"pkgTagSection::FindI(char const*, long) const@Base" 0.8.0
 (c++)"pkgTagSection::FindS(char const*) const@Base" 0.8.0
 (c++)"pkgTagSection::FindULL(char const*, unsigned long long const&) const@Base" 0.8.0
 (c++)"pkgTagSection::FindFlag(char const*, unsigned long&, unsigned long) const@Base" 0.8.0
 (c++)"debStatusIndex::FindInCache(pkgCache&) const@Base" 0.8.0
 (c++)"debStatusIndex::HasPackages() const@Base" 0.8.0
 (c++)"debStatusIndex::Size() const@Base" 0.8.0
 (c++)"debStatusIndex::Merge(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.0
 (c++)"debStatusIndex::Exists() const@Base" 0.8.0
 (c++)"debStatusIndex::GetType() const@Base" 0.8.0
 (c++)"debStatusIndex::Describe(bool) const@Base" 0.8.0
 (c++)"debIFTypeStatus::CreatePkgParser(pkgCache::PkgFileIterator) const@Base" 0.8.0
 (c++)"debReleaseIndex::ArchiveURI(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::GetIndexes(pkgAcquire*, bool const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::MetaIndexURI(char const*) const@Base" 0.8.0
 (c++)"debReleaseIndex::MetaIndexFile(char const*) const@Base" 0.8.0
 (c++)"debReleaseIndex::MetaIndexInfo(char const*) const@Base" 0.8.0
 (c++)"debReleaseIndex::IndexURISuffix(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::SourceIndexURI(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::ComputeIndexTargets() const@Base" 0.8.0
 (c++)"debReleaseIndex::SourceIndexURISuffix(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::Info(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::IndexURI(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"debReleaseIndex::IsTrusted() const@Base" 0.8.0
 (c++)"debSLTypeDebSrc::CreateItem(std::vector<metaIndex*, std::allocator<metaIndex*> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) const@Base" 0.8.0
 (c++)"debSLTypeDebian::CreateItemInternal(std::vector<metaIndex*, std::allocator<metaIndex*> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool const&, std::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) const@Base" 0.8.0
 (c++)"debSourcesIndex::ArchiveURI(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"debSourcesIndex::SourceInfo(pkgSrcRecords::Parser const&, pkgSrcRecords::File const&) const@Base" 0.8.0
 (c++)"debSourcesIndex::HasPackages() const@Base" 0.8.0
 (c++)"debSourcesIndex::CreateSrcParser() const@Base" 0.8.0
 (c++)"debSourcesIndex::Info(char const*) const@Base" 0.8.0
 (c++)"debSourcesIndex::Size() const@Base" 0.8.0
 (c++)"debSourcesIndex::Exists() const@Base" 0.8.0
 (c++)"debSourcesIndex::GetType() const@Base" 0.8.0
 (c++)"debSourcesIndex::Describe(bool) const@Base" 0.8.0
 (c++)"debSourcesIndex::IndexURI(char const*) const@Base" 0.8.0
 (c++)"debPackagesIndex::ArchiveURI(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"debPackagesIndex::ArchiveInfo(pkgCache::VerIterator) const@Base" 0.8.0
 (c++)"debPackagesIndex::FindInCache(pkgCache&) const@Base" 0.8.0
 (c++)"debPackagesIndex::HasPackages() const@Base" 0.8.0
 (c++)"debPackagesIndex::Info(char const*) const@Base" 0.8.0
 (c++)"debPackagesIndex::Size() const@Base" 0.8.0
 (c++)"debPackagesIndex::Merge(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.0
 (c++)"debPackagesIndex::Exists() const@Base" 0.8.0
 (c++)"debPackagesIndex::GetType() const@Base" 0.8.0
 (c++)"debPackagesIndex::Describe(bool) const@Base" 0.8.0
 (c++)"debPackagesIndex::IndexURI(char const*) const@Base" 0.8.0
 (c++)"debSrcRecordParser::Maintainer() const@Base" 0.8.0
 (c++)"debSrcRecordParser::Package() const@Base" 0.8.0
 (c++)"debSrcRecordParser::Section() const@Base" 0.8.0
 (c++)"debSrcRecordParser::Version() const@Base" 0.8.0
 (c++)"debTranslationsIndex::GetIndexes(pkgAcquire*) const@Base" 0.8.0
 (c++)"debTranslationsIndex::FindInCache(pkgCache&) const@Base" 0.8.0
 (c++)"debTranslationsIndex::HasPackages() const@Base" 0.8.0
 (c++)"debTranslationsIndex::Info(char const*) const@Base" 0.8.0
 (c++)"debTranslationsIndex::Size() const@Base" 0.8.0
 (c++)"debTranslationsIndex::Merge(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.0
 (c++)"debTranslationsIndex::Exists() const@Base" 0.8.0
 (c++)"debTranslationsIndex::GetType() const@Base" 0.8.0
 (c++)"debTranslationsIndex::Describe(bool) const@Base" 0.8.0
 (c++)"debTranslationsIndex::IndexURI(char const*) const@Base" 0.8.0
 (c++)"Vendor::GetVendorID() const@Base" 0.8.0
 (c++)"Vendor::LookupFingerprint(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"pkgCache::DepIterator::AllTargets() const@Base" 0.8.0
 (c++)"pkgCache::DepIterator::IsCritical() const@Base" 0.8.0
 (c++)"pkgCache::DepIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::DepIterator::SmartTargetPkg(pkgCache::PkgIterator&) const@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::FindPreferredPkg(bool const&) const@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::FindPkg(std::basic_string<char, std::char_traits<char>, std::allocator<char> >) const@Base" 0.8.0
 (c++)"pkgCache::GrpIterator::NextPkg(pkgCache::PkgIterator const&) const@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::CurVersion() const@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::CandVersion() const@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::State() const@Base" 0.8.0
 (c++)"pkgCache::PkgIterator::FullName(bool const&) const@Base" 0.8.0
 (c++)"pkgCache::PrvIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::CompareVer(pkgCache::VerIterator const&) const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::NewestFile() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::Downloadable() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::TranslatedDescription() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::RelStr() const@Base" 0.8.0
 (c++)"pkgCache::VerIterator::Automatic() const@Base" 0.8.0
 (c++)"pkgCache::DescIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::PkgFileIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::VerFileIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::DescFileIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"pkgCache::sHash(char const*) const@Base" 0.8.0
 (c++)"pkgCache::sHash(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.0
 (c++)"pkgCache::Header::CheckSizes(pkgCache::Header&) const@Base" 0.8.0
 (c++)"debSystem::CreatePM(pkgDepCache*) const@Base" 0.8.0
 (c++)"debSystem::FindIndex(pkgCache::PkgFileIterator, pkgIndexFile*&) const@Base" 0.8.0
 (c++)"metaIndex::GetURI() const@Base" 0.8.0
 (c++)"metaIndex::GetDist() const@Base" 0.8.0
 (c++)"metaIndex::GetType() const@Base" 0.8.0
 (c++)"typeinfo for OpProgress@Base" 0.8.0
 (c++)"typeinfo for SourceCopy@Base" 0.8.0
 (c++)"typeinfo for pkgAcqFile@Base" 0.8.0
 (c++)"typeinfo for pkgAcquire@Base" 0.8.0
 (c++)"typeinfo for DynamicMMap@Base" 0.8.0
 (c++)"typeinfo for PackageCopy@Base" 0.8.0
 (c++)"typeinfo for pkgAcqIndex@Base" 0.8.0
 (c++)"typeinfo for pkgDepCache@Base" 0.8.0
 (c++)"typeinfo for pkgSimulate@Base" 0.8.0
 (c++)"typeinfo for debIFTypePkg@Base" 0.8.0
 (c++)"typeinfo for debIFTypeSrc@Base" 0.8.0
 (c++)"typeinfo for debSLTypeDeb@Base" 0.8.0
 (c++)"typeinfo for indexRecords@Base" 0.8.0
 (c++)"typeinfo for pkgAcqMethod@Base" 0.8.0
 (c++)"typeinfo for pkgCacheFile@Base" 0.8.0
 (c++)"typeinfo for pkgIndexFile@Base" 0.8.0
 (c++)"typeinfo for WeakPointable@Base" 0.8.0
 (c++)"typeinfo for debListParser@Base" 0.8.0
 (c++)"typeinfo for pkgAcqArchive@Base" 0.8.0
 (c++)"typeinfo for pkgAcqMetaSig@Base" 0.8.0
 (c++)"typeinfo for pkgTagSection@Base" 0.8.0
 (c++)"typeinfo for OpTextProgress@Base" 0.8.0
 (c++)"typeinfo for debIFTypeTrans@Base" 0.8.0
 (c++)"typeinfo for debStatusIndex@Base" 0.8.0
 (c++)"typeinfo for debIFTypeStatus@Base" 0.8.0
 (c++)"typeinfo for debRecordParser@Base" 0.8.0
 (c++)"typeinfo for debReleaseIndex@Base" 0.8.0
 (c++)"typeinfo for debSLTypeDebSrc@Base" 0.8.0
 (c++)"typeinfo for debSLTypeDebian@Base" 0.8.0
 (c++)"typeinfo for debSourcesIndex@Base" 0.8.0
 (c++)"typeinfo for pkgAcqDiffIndex@Base" 0.8.0
 (c++)"typeinfo for pkgAcqMetaIndex@Base" 0.8.0
 (c++)"typeinfo for debPackagesIndex@Base" 0.8.0
 (c++)"typeinfo for pkgAcqIndexDiffs@Base" 0.8.0
 (c++)"typeinfo for pkgAcqIndexTrans@Base" 0.8.0
 (c++)"typeinfo for pkgAcquireStatus@Base" 0.8.0
 (c++)"typeinfo for PreferenceSection@Base" 0.8.0
 (c++)"typeinfo for pkgPackageManager@Base" 0.8.0
 (c++)"typeinfo for debSrcRecordParser@Base" 0.8.0
 (c++)"typeinfo for debVersioningSystem@Base" 0.8.0
 (c++)"typeinfo for pkgUdevCdromDevices@Base" 0.8.0
 (c++)"typeinfo for pkgVersioningSystem@Base" 0.8.0
 (c++)"typeinfo for debTranslationsIndex@Base" 0.8.0
 (c++)"typeinfo for MMap@Base" 0.8.0
 (c++)"typeinfo for FileFd@Base" 0.8.0
 (c++)"typeinfo for Vendor@Base" 0.8.0
 (c++)"typeinfo for pkgCache@Base" 0.8.0
 (c++)"typeinfo for IndexCopy@Base" 0.8.0
 (c++)"typeinfo for debSystem@Base" 0.8.0
 (c++)"typeinfo for metaIndex@Base" 0.8.0
 (c++)"typeinfo for pkgDPkgPM@Base" 0.8.0
 (c++)"typeinfo for pkgPolicy@Base" 0.8.0
 (c++)"typeinfo for pkgSystem@Base" 0.8.0
 (c++)"typeinfo for pkgAcquire::Item@Base" 0.8.0
 (c++)"typeinfo for pkgRecords::Parser@Base" 0.8.0
 (c++)"typeinfo for pkgDepCache::InRootSetFunc@Base" 0.8.0
 (c++)"typeinfo for pkgDepCache::DefaultRootSetFunc@Base" 0.8.0
 (c++)"typeinfo for pkgDepCache::Policy@Base" 0.8.0
 (c++)"typeinfo for pkgSimulate::Policy@Base" 0.8.0
 (c++)"typeinfo for pkgIndexFile::Type@Base" 0.8.0
 (c++)"typeinfo for Configuration::MatchAgainstConfig@Base" 0.8.0
 (c++)"typeinfo for pkgSourceList::Type@Base" 0.8.0
 (c++)"typeinfo for pkgSrcRecords::Parser@Base" 0.8.0
 (c++)"typeinfo for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++)"typeinfo for APT::CacheSetHelper@Base" 0.8.0
 (c++)"typeinfo for pkgCache::DepIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::GrpIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::PkgIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::PrvIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::VerIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::DescIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::PkgFileIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::VerFileIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::DescFileIterator@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Description, pkgCache::DescIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::PackageFile, pkgCache::PkgFileIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Group, pkgCache::GrpIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::VerFile, pkgCache::VerFileIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::DescFile, pkgCache::DescFileIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Iterator<pkgCache::Provides, pkgCache::PrvIterator>@Base" 0.8.0
 (c++)"typeinfo for pkgCache::Namespace@Base" 0.8.0
 (c++)"typeinfo name for OpProgress@Base" 0.8.0
 (c++)"typeinfo name for SourceCopy@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqFile@Base" 0.8.0
 (c++)"typeinfo name for pkgAcquire@Base" 0.8.0
 (c++)"typeinfo name for DynamicMMap@Base" 0.8.0
 (c++)"typeinfo name for PackageCopy@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqIndex@Base" 0.8.0
 (c++)"typeinfo name for pkgDepCache@Base" 0.8.0
 (c++)"typeinfo name for pkgSimulate@Base" 0.8.0
 (c++)"typeinfo name for debIFTypePkg@Base" 0.8.0
 (c++)"typeinfo name for debIFTypeSrc@Base" 0.8.0
 (c++)"typeinfo name for debSLTypeDeb@Base" 0.8.0
 (c++)"typeinfo name for indexRecords@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqMethod@Base" 0.8.0
 (c++)"typeinfo name for pkgCacheFile@Base" 0.8.0
 (c++)"typeinfo name for pkgIndexFile@Base" 0.8.0
 (c++)"typeinfo name for WeakPointable@Base" 0.8.0
 (c++)"typeinfo name for debListParser@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqArchive@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqMetaSig@Base" 0.8.0
 (c++)"typeinfo name for pkgTagSection@Base" 0.8.0
 (c++)"typeinfo name for OpTextProgress@Base" 0.8.0
 (c++)"typeinfo name for debIFTypeTrans@Base" 0.8.0
 (c++)"typeinfo name for debStatusIndex@Base" 0.8.0
 (c++)"typeinfo name for debIFTypeStatus@Base" 0.8.0
 (c++)"typeinfo name for debRecordParser@Base" 0.8.0
 (c++)"typeinfo name for debReleaseIndex@Base" 0.8.0
 (c++)"typeinfo name for debSLTypeDebSrc@Base" 0.8.0
 (c++)"typeinfo name for debSLTypeDebian@Base" 0.8.0
 (c++)"typeinfo name for debSourcesIndex@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqDiffIndex@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqMetaIndex@Base" 0.8.0
 (c++)"typeinfo name for debPackagesIndex@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqIndexDiffs@Base" 0.8.0
 (c++)"typeinfo name for pkgAcqIndexTrans@Base" 0.8.0
 (c++)"typeinfo name for pkgAcquireStatus@Base" 0.8.0
 (c++)"typeinfo name for PreferenceSection@Base" 0.8.0
 (c++)"typeinfo name for pkgPackageManager@Base" 0.8.0
 (c++)"typeinfo name for debSrcRecordParser@Base" 0.8.0
 (c++)"typeinfo name for debVersioningSystem@Base" 0.8.0
 (c++)"typeinfo name for pkgUdevCdromDevices@Base" 0.8.0
 (c++)"typeinfo name for pkgVersioningSystem@Base" 0.8.0
 (c++)"typeinfo name for debTranslationsIndex@Base" 0.8.0
 (c++)"typeinfo name for MMap@Base" 0.8.0
 (c++)"typeinfo name for FileFd@Base" 0.8.0
 (c++)"typeinfo name for Vendor@Base" 0.8.0
 (c++)"typeinfo name for pkgCache@Base" 0.8.0
 (c++)"typeinfo name for IndexCopy@Base" 0.8.0
 (c++)"typeinfo name for debSystem@Base" 0.8.0
 (c++)"typeinfo name for metaIndex@Base" 0.8.0
 (c++)"typeinfo name for pkgDPkgPM@Base" 0.8.0
 (c++)"typeinfo name for pkgPolicy@Base" 0.8.0
 (c++)"typeinfo name for pkgSystem@Base" 0.8.0
 (c++)"typeinfo name for pkgAcquire::Item@Base" 0.8.0
 (c++)"typeinfo name for pkgRecords::Parser@Base" 0.8.0
 (c++)"typeinfo name for pkgDepCache::InRootSetFunc@Base" 0.8.0
 (c++)"typeinfo name for pkgDepCache::DefaultRootSetFunc@Base" 0.8.0
 (c++)"typeinfo name for pkgDepCache::Policy@Base" 0.8.0
 (c++)"typeinfo name for pkgSimulate::Policy@Base" 0.8.0
 (c++)"typeinfo name for pkgIndexFile::Type@Base" 0.8.0
 (c++)"typeinfo name for Configuration::MatchAgainstConfig@Base" 0.8.0
 (c++)"typeinfo name for pkgSourceList::Type@Base" 0.8.0
 (c++)"typeinfo name for pkgSrcRecords::Parser@Base" 0.8.0
 (c++)"typeinfo name for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++)"typeinfo name for APT::CacheSetHelper@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::DepIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::GrpIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::PkgIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::PrvIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::VerIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::DescIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::PkgFileIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::VerFileIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::DescFileIterator@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Description, pkgCache::DescIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::PackageFile, pkgCache::PkgFileIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Group, pkgCache::GrpIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::VerFile, pkgCache::VerFileIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::DescFile, pkgCache::DescFileIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Iterator<pkgCache::Provides, pkgCache::PrvIterator>@Base" 0.8.0
 (c++)"typeinfo name for pkgCache::Namespace@Base" 0.8.0
 (c++)"vtable for OpProgress@Base" 0.8.0
 (c++)"vtable for SourceCopy@Base" 0.8.0
 (c++)"vtable for pkgAcqFile@Base" 0.8.0
 (c++)"vtable for pkgAcquire@Base" 0.8.0
 (c++)"vtable for DynamicMMap@Base" 0.8.0
 (c++)"vtable for PackageCopy@Base" 0.8.0
 (c++)"vtable for pkgAcqIndex@Base" 0.8.0
 (c++)"vtable for pkgDepCache@Base" 0.8.0
 (c++)"vtable for pkgSimulate@Base" 0.8.0
 (c++)"vtable for debIFTypePkg@Base" 0.8.0
 (c++)"vtable for debIFTypeSrc@Base" 0.8.0
 (c++)"vtable for debSLTypeDeb@Base" 0.8.0
 (c++)"vtable for indexRecords@Base" 0.8.0
 (c++)"vtable for pkgAcqMethod@Base" 0.8.0
 (c++)"vtable for pkgCacheFile@Base" 0.8.0
 (c++)"vtable for pkgIndexFile@Base" 0.8.0
 (c++)"vtable for debListParser@Base" 0.8.0
 (c++)"vtable for pkgAcqArchive@Base" 0.8.0
 (c++)"vtable for pkgAcqMetaSig@Base" 0.8.0
 (c++)"vtable for pkgTagSection@Base" 0.8.0
 (c++)"vtable for OpTextProgress@Base" 0.8.0
 (c++)"vtable for debIFTypeTrans@Base" 0.8.0
 (c++)"vtable for debStatusIndex@Base" 0.8.0
 (c++)"vtable for debIFTypeStatus@Base" 0.8.0
 (c++)"vtable for debRecordParser@Base" 0.8.0
 (c++)"vtable for debReleaseIndex@Base" 0.8.0
 (c++)"vtable for debSLTypeDebSrc@Base" 0.8.0
 (c++)"vtable for debSLTypeDebian@Base" 0.8.0
 (c++)"vtable for debSourcesIndex@Base" 0.8.0
 (c++)"vtable for pkgAcqDiffIndex@Base" 0.8.0
 (c++)"vtable for pkgAcqMetaIndex@Base" 0.8.0
 (c++)"vtable for debPackagesIndex@Base" 0.8.0
 (c++)"vtable for pkgAcqIndexDiffs@Base" 0.8.0
 (c++)"vtable for pkgAcqIndexTrans@Base" 0.8.0
 (c++)"vtable for pkgAcquireStatus@Base" 0.8.0
 (c++)"vtable for PreferenceSection@Base" 0.8.0
 (c++)"vtable for pkgPackageManager@Base" 0.8.0
 (c++)"vtable for debSrcRecordParser@Base" 0.8.0
 (c++)"vtable for debVersioningSystem@Base" 0.8.0
 (c++)"vtable for pkgUdevCdromDevices@Base" 0.8.0
 (c++)"vtable for pkgVersioningSystem@Base" 0.8.0
 (c++)"vtable for debTranslationsIndex@Base" 0.8.0
 (c++)"vtable for MMap@Base" 0.8.0
 (c++)"vtable for FileFd@Base" 0.8.0
 (c++)"vtable for Vendor@Base" 0.8.0
 (c++)"vtable for pkgCache@Base" 0.8.0
 (c++)"vtable for IndexCopy@Base" 0.8.0
 (c++)"vtable for debSystem@Base" 0.8.0
 (c++)"vtable for metaIndex@Base" 0.8.0
 (c++)"vtable for pkgDPkgPM@Base" 0.8.0
 (c++)"vtable for pkgPolicy@Base" 0.8.0
 (c++)"vtable for pkgSystem@Base" 0.8.0
 (c++)"vtable for pkgAcquire::Item@Base" 0.8.0
 (c++)"vtable for pkgRecords::Parser@Base" 0.8.0
 (c++)"vtable for pkgDepCache::InRootSetFunc@Base" 0.8.0
 (c++)"vtable for pkgDepCache::DefaultRootSetFunc@Base" 0.8.0
 (c++)"vtable for pkgDepCache::Policy@Base" 0.8.0
 (c++)"vtable for pkgSimulate::Policy@Base" 0.8.0
 (c++)"vtable for pkgIndexFile::Type@Base" 0.8.0
 (c++)"vtable for Configuration::MatchAgainstConfig@Base" 0.8.0
 (c++)"vtable for pkgSourceList::Type@Base" 0.8.0
 (c++)"vtable for pkgSrcRecords::Parser@Base" 0.8.0
 (c++)"vtable for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++)"vtable for APT::CacheSetHelper@Base" 0.8.0
 (c++)"vtable for pkgCache::DepIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::GrpIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::PkgIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::PrvIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::VerIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::DescIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::PkgFileIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::VerFileIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::DescFileIterator@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Description, pkgCache::DescIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::PackageFile, pkgCache::PkgFileIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Group, pkgCache::GrpIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::VerFile, pkgCache::VerFileIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::DescFile, pkgCache::DescFileIterator>@Base" 0.8.0
 (c++)"vtable for pkgCache::Iterator<pkgCache::Provides, pkgCache::PrvIterator>@Base" 0.8.0
 (c++)"non-virtual thunk to pkgDepCache::DefaultRootSetFunc::~DefaultRootSetFunc()@Base" 0.8.0
 (c++)"operator<<(std::basic_ostream<char, std::char_traits<char> >&, pkgCache::DepIterator)@Base" 0.8.0
 (c++)"operator<<(std::basic_ostream<char, std::char_traits<char> >&, pkgCache::PkgIterator)@Base" 0.8.0
 _apt_DebSrcType@Base 0.8.0
 _apt_DebType@Base 0.8.0
 _config@Base 0.8.0
 _system@Base 0.8.0
 debSys@Base 0.8.0
 debVS@Base 0.8.0
 pkgLibVersion@Base 0.8.0
 pkgVersion@Base 0.8.0
### demangle strangeness - buildd report it as MISSING and as new…
 (c++)"pkgAcqMetaSig::pkgAcqMetaSig(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<IndexTarget*, std::allocator<IndexTarget*> > const*, indexRecords*)@Base" 0.8.0
### gcc-4.4 specific
# (c++|optional=inherent)"APT::PackageSet::PackageSet(APT::PackageSet const&)@Base" 0.8.0
# (c++|optional=inline)"stringcasecmp(char const*, char const*, char const*)@Base" 0.8.0
# (arch=armel|c++|optional=inline)"stringcasecmp(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)@Base" 0.8.0
# (c++|optional=inherent)"APT::VersionSet::insert(pkgCache::VerIterator const&)@Base" 0.8.0
# (c++|optional=inline)"APT::VersionSet::insert(APT::VersionSet const&)@Base" 0.8.0
# (c++|optional=private)"debTranslationsIndex::IndexFile(char const*) const@Base" 0.8.0
# (c++|optional=inline)"pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>::end() const@Base" 0.8.0
# (c++|optional=inherent)"HashString::operator=(HashString const&)@Base" 0.8.0
# (c++|regex|optional=std)"^std::less<[^ ]+>::operator\(\)\(.+\) const@Base$" 0.8.0
# (c++|regex|optional=std)"^std::vector<.+ >::(vector|push_back|erase|_[^ ]+)\(.+\)( const|)@Base$" 0.8.0
# (c++|regex|optional=std)"^pkgCache::(Dep|Pkg|Ver|Grp|Prv|Desc|PkgFile)Iterator\*\* std::_.+@Base$" 0.8.0
### gcc-4.5 specific
# (c++|regex|optional=std)"^char\* std::[^ ]+<.+ >::_.+@Base$" 0.8.0
# (c++|optional=inline)"FileFd::FileFd(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, FileFd::OpenMode, unsigned long)@Base" 0.8.0
# (c++|regex|optional=template)"^SPtrArray<[^ ]+>::~SPtrArray\(\)@Base$" 0.8.0
# (c++|optional=template)"SPtrArray<unsigned char>::~SPtrArray()@Base" 0.8.0
### gcc-4.6 specific
 (c++|optional=template)"SPtrArray<pkgCache::Version*>::~SPtrArray()@Base" 0.8.0
 (c++|regex|optional=std)"^std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char( const|)\*>\(.+\)@Base$" 0.8.0
 (c++|regex|optional=std)"^std::vector<DiffInfo, .+@Base$" 0.8.0
 (c++|regex|optional=std)"^std::vector<.+ >::(vector|push_back|erase|_[^ ]+)\(.+\)( const|)@Base$" 0.8.0
# (c++|optional=strange)"pkgCache::VerIterator::VerIterator(pkgCache&, pkgCache::Version*)@Base" 0.8.0
### architecture specific: va_list
 (arch=armel armhf|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, std::__va_list&) const@Base" 0.8.15~exp1
 (arch=i386 hurd-i386 kfreebsd-i386|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, char*&) const@Base" 0.8.15~exp1
 (arch=hppa ia64 mips mipsel sparc sparc64|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, void*&) const@Base" 0.8.15~exp1
 (arch=amd64 kfreebsd-amd64 powerpc powerpcspe s390|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, __va_list_tag (&) [1]) const@Base" 0.8.15~exp1
 (arch=sh4|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, __builtin_va_list&) const@Base" 0.8.15~exp1
 (arch=alpha|c++)"pkgAcqMethod::PrintStatus(char const*, char const*, __va_list_tag&) const@Base" 0.8.15~exp1
### architecture specific: va_list & size_t
 (arch=i386 hurd-i386 kfreebsd-i386|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, char*&, unsigned int&)@Base" 0.8.11.4
 (arch=armel armhf|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, std::__va_list&, unsigned int&)@Base" 0.8.11.4
 (arch=alpha|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, __va_list_tag&, unsigned long&)@Base" 0.8.11.4
 (arch=powerpc powerpcspe|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, __va_list_tag (&) [1], unsigned int&)@Base" 0.8.11.4
 (arch=amd64 kfreebsd-amd64 s390|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, __va_list_tag (&) [1], unsigned long&)@Base" 0.8.11.4
 (arch=hppa mips mipsel sparc|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, void*&, unsigned int&)@Base" 0.8.11.4
 (arch=ia64 sparc64|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, void*&, unsigned long&)@Base" 0.8.11.4
 (arch=sh4|c++|optional=private)"GlobalError::Insert(GlobalError::MsgType, char const*, __builtin_va_list&, unsigned int&)@Base" 0.8.11.4
 (arch=i386 hurd-i386 kfreebsd-i386|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, char*&, int, unsigned int&)@Base" 0.8.11.4
 (arch=armel armhf|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, std::__va_list&, int, unsigned int&)@Base" 0.8.11.4
 (arch=alpha|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, __va_list_tag&, int, unsigned long&)@Base" 0.8.11.4
 (arch=powerpc powerpcspe|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, __va_list_tag (&) [1], int, unsigned int&)@Base" 0.8.11.4
 (arch=amd64 kfreebsd-amd64 s390|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, __va_list_tag (&) [1], int, unsigned long&)@Base" 0.8.11.4
 (arch=hppa mips mipsel sparc|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, void*&, int, unsigned int&)@Base" 0.8.11.4
 (arch=ia64 sparc64|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, void*&, int, unsigned long&)@Base" 0.8.11.4 1
 (arch=sh4|c++|optional=private)"GlobalError::InsertErrno(GlobalError::MsgType, char const*, char const*, __builtin_va_list&, int, unsigned int&)@Base" 0.8.11.4
### architecture specific: size_t
 (arch=i386 armel armhf hppa hurd-i386 kfreebsd-i386 mips mipsel powerpc powerpcspe sh4 sparc|c++)"_strtabexpand(char*, unsigned int)@Base" 0.8.0
 (arch=alpha amd64 ia64 kfreebsd-amd64 s390 sparc64|c++)"_strtabexpand(char*, unsigned long)@Base" 0.8.0
### try to ignore std:: template instances
 (c++|regex|optional=std)"^(void |)std::[^ ]+<.+ >::(_|~).+\(.*\)@Base$" 0.8.0
 (c++|regex|optional=std)"^std::[^ ]+<.+ >::(append|insert|reserve|operator[^ ]+)\(.*\)@Base$" 0.8.0
 (c++|regex|optional=std)"^(void |DiffInfo\* |)std::_.*@Base$" 0.8.0
 (c++|regex|optional=std)"^(bool|void) std::(operator|sort_heap|make_heap)[^ ]+<.+ >\(.+\)@Base$" 0.8.0
 (c++|regex|optional=std)"^std::reverse_iterator<.+ > std::__.+@Base$" 0.8.0
 (c++|regex|optional=std)"^std::basic_string<.+ >\(.+\)@Base$" 0.8.0
 (c++|regex|optional=std)"^__gnu_cxx::__[^ ]+<.*@Base$" 0.8.0
 (c++|regex|optional=std)"^typeinfo name for std::iterator<.*>@Base$" 0.8.0
 (c++|regex|optional=std)"^typeinfo for std::iterator<.*>@Base$" 0.8.0
###
 (c++)"Configuration::MatchAgainstConfig::clearPatterns()@Base" 0.8.1
 (c++)"CreateAPTDirectoryIfNeeded(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.2
 (c++)"FileFd::FileSize()@Base" 0.8.8
 (c++)"Base256ToNum(char const*, unsigned long&, unsigned int)@Base" 0.8.11
 (c++)"pkgDepCache::SetCandidateRelease(pkgCache::VerIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::list<std::pair<pkgCache::VerIterator, pkgCache::VerIterator>, std::allocator<std::pair<pkgCache::VerIterator, pkgCache::VerIterator> > >&)@Base" 0.8.11
 (c++)"pkgDepCache::SetCandidateRelease(pkgCache::VerIterator, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.11
 (c++)"RealFileExists(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.11
 (c++)"StripEpoch(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.11
 (c++)"IndexTarget::~IndexTarget()@Base" 0.8.11
 (c++)"pkgAcqIndex::Init(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.11
 (c++)"pkgAcqIndex::pkgAcqIndex(pkgAcquire*, IndexTarget const*, HashString const&, indexRecords const*)@Base" 0.8.11
 (c++)"pkgTagSection::FindFlag(unsigned long&, unsigned long, char const*, char const*)@Base" 0.8.11
 (c++)"pkgAcqSubIndex::ParseIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.11
 (c++)"pkgAcqSubIndex::Custom600Headers()@Base" 0.8.11
 (c++)"pkgAcqSubIndex::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.11
 (c++)"pkgAcqSubIndex::DescURI()@Base" 0.8.11
 (c++)"pkgAcqSubIndex::pkgAcqSubIndex(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, HashString const&)@Base" 0.8.11
 (c++)"pkgAcqSubIndex::~pkgAcqSubIndex()@Base" 0.8.11
 (c++)"pkgAcqMetaClearSig::Failed(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.11
 (c++)"pkgAcqMetaClearSig::pkgAcqMetaClearSig(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<IndexTarget*, std::allocator<IndexTarget*> > const*, indexRecords*)@Base" 0.8.11
 (c++)"pkgAcqMetaClearSig::~pkgAcqMetaClearSig()@Base" 0.8.11
 (c++)"pkgAcqIndexTrans::pkgAcqIndexTrans(pkgAcquire*, IndexTarget const*, HashString const&, indexRecords const*)@Base" 0.8.11
 (c++)"IndexTarget::IsOptional() const@Base" 0.8.11
 (c++)"IndexTarget::IsSubIndex() const@Base" 0.8.11
 (c++)"debReleaseIndex::TranslationIndexURI(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.11
 (c++)"debReleaseIndex::TranslationIndexURISuffix(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.8.11
 (c++)"typeinfo for pkgAcqSubIndex@Base" 0.8.11
 (c++)"typeinfo for pkgAcqMetaClearSig@Base" 0.8.11
 (c++)"typeinfo name for pkgAcqSubIndex@Base" 0.8.11
 (c++)"typeinfo name for pkgAcqMetaClearSig@Base" 0.8.11
 (c++)"vtable for pkgAcqSubIndex@Base" 0.8.11
 (c++)"vtable for pkgAcqMetaClearSig@Base" 0.8.11
 (c++)"FindMountPointForDevice(char const*)@Base" 0.8.12
 (c++)"pkgUdevCdromDevices::ScanForRemovable(bool)@Base" 0.8.12
 (c++)"APT::Configuration::Compressor::Compressor(char const*, char const*, char const*, char const*, char const*, unsigned short)@Base" 0.8.12
 (c++)"APT::Configuration::Compressor::~Compressor()@Base" 0.8.12
 (c++)"APT::Configuration::getCompressors(bool)@Base" 0.8.12
 (c++)"APT::Configuration::getCompressorExtensions()@Base" 0.8.12
 (c++)"APT::Configuration::setDefaultConfigurationForCompressors()@Base" 0.8.12
 (c++)"pkgAcqMetaClearSig::Custom600Headers()@Base" 0.8.13
 (c++|optional=private)"debListParser::NewProvidesAllArch(pkgCache::VerIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.13.2
 (c++|optional=private)"PrintMode(char)@Base" 0.8.13.2
 (c++)"pkgDepCache::IsModeChangeOk(pkgDepCache::ModeList, pkgCache::PkgIterator const&, unsigned long, bool)@Base" 0.8.13.2
 (c++)"pkgPackageManager::SmartUnPack(pkgCache::PkgIterator, bool)@Base" 0.8.15~exp1
 (c++)"pkgCache::DepIterator::IsNegative() const@Base" 0.8.15~exp1
 (c++)"Configuration::CndSet(char const*, int)@Base" 0.8.15.3
 (c++)"pkgProblemResolver::InstOrNewPolicyBroken(pkgCache::PkgIterator)@Base" 0.8.15.3
 (c++)"DeEscapeString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.15.4
 (c++)"GetModificationTime(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.15.6
 (c++)"pkgSourceList::GetLastModifiedTime()@Base" 0.8.15.6
 (c++)"pkgCacheGenerator::NewDepends(pkgCache::PkgIterator&, pkgCache::VerIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int const&, unsigned int const&, unsigned int*&)@Base" 0.8.15.6
 (c++)"pkgCacheFile::RemoveCaches()@Base" 0.8.15.7
 (c++)"pkgOrderList::VisitNode(pkgCache::PkgIterator, char const*)@Base" 0.8.15.7
### external dependency resolver ###
 (c++)"edspIFType::~edspIFType()@Base" 0.8.16~exp2
 (c++)"edspSystem::Initialize(Configuration&)@Base" 0.8.16~exp2
 (c++)"edspSystem::AddStatusFiles(std::vector<pkgIndexFile*, std::allocator<pkgIndexFile*> >&)@Base" 0.8.16~exp2
 (c++)"edspSystem::ArchiveSupported(char const*)@Base" 0.8.16~exp2
 (c++)"edspSystem::Lock()@Base" 0.8.16~exp2
 (c++)"edspSystem::Score(Configuration const&)@Base" 0.8.16~exp2
 (c++)"edspSystem::UnLock(bool)@Base" 0.8.16~exp2
 (c++)"edspSystem::edspSystem()@Base" 0.8.16~exp2
 (c++)"edspSystem::~edspSystem()@Base" 0.8.16~exp2
 (c++)"edspListParser::NewVersion(pkgCache::VerIterator&)@Base" 0.8.16~exp2
 (c++)"edspListParser::Description()@Base" 0.8.16~exp2
 (c++)"edspListParser::ParseStatus(pkgCache::PkgIterator&, pkgCache::VerIterator&)@Base" 0.8.16~exp2
 (c++)"edspListParser::VersionHash()@Base" 0.8.16~exp2
 (c++)"edspListParser::Description_md5()@Base" 0.8.16~exp2
 (c++)"edspListParser::LoadReleaseInfo(pkgCache::PkgFileIterator&, FileFd&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.16~exp2
 (c++)"edspListParser::DescriptionLanguage()@Base" 0.8.16~exp2
 (c++)"edspListParser::edspListParser(FileFd*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.16~exp2
 (c++)"edspListParser::~edspListParser()@Base" 0.8.16~exp2
 (c++)"edspIndex::edspIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.16~exp2
 (c++)"edspIndex::~edspIndex()@Base" 0.8.16~exp2
 (c++)"edspIFType::CreatePkgParser(pkgCache::PkgFileIterator) const@Base" 0.8.16~exp2
 (c++)"edspSystem::CreatePM(pkgDepCache*) const@Base" 0.8.16~exp2
 (c++)"edspSystem::FindIndex(pkgCache::PkgFileIterator, pkgIndexFile*&) const@Base" 0.8.16~exp2
 (c++)"edspIndex::Merge(pkgCacheGenerator&, OpProgress*) const@Base" 0.8.16~exp2
 (c++)"edspIndex::GetType() const@Base" 0.8.16~exp2
 (c++)"EDSP::WriteError(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _IO_FILE*)@Base" 0.8.16~exp2
 (c++)"EDSP::ReadRequest(int, std::list<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::list<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool&, bool&, bool&)@Base" 0.8.16~exp2
 (c++)"EDSP::ApplyRequest(std::list<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::list<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, pkgDepCache&)@Base" 0.8.16~exp2
 (c++)"EDSP::ReadResponse(int, pkgDepCache&, OpProgress*)@Base" 0.8.16~exp2
 (c++)"EDSP::StringToBool(char const*, bool)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteRequest(pkgDepCache&, _IO_FILE*, bool, bool, bool, OpProgress*)@Base" 0.8.16~exp2
 (c++)"EDSP::ExecuteSolver(char const*, int*, int*)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteProgress(unsigned short, char const*, _IO_FILE*)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteScenario(pkgDepCache&, _IO_FILE*, OpProgress*)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteSolution(pkgDepCache&, _IO_FILE*)@Base" 0.8.16~exp2
 (c++)"EDSP::ResolveExternal(char const*, pkgDepCache&, bool, bool, bool, OpProgress*)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteLimitedScenario(pkgDepCache&, _IO_FILE*, APT::PackageSet const&, OpProgress*)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteScenarioVersion(pkgDepCache&, _IO_FILE*, pkgCache::PkgIterator const&, pkgCache::VerIterator const&)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteScenarioDependency(pkgDepCache&, _IO_FILE*, pkgCache::PkgIterator const&, pkgCache::VerIterator const&)@Base" 0.8.16~exp2
 (c++)"EDSP::WriteScenarioLimitedDependency(pkgDepCache&, _IO_FILE*, pkgCache::PkgIterator const&, pkgCache::VerIterator const&, APT::PackageSet const&)@Base" 0.8.16~exp2
 (c++)"EDSP::DepMap@Base" 0.8.16~exp2
 (c++)"EDSP::PrioMap@Base" 0.8.16~exp2
 (c++)"EDSP::ReadLine(int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.16~exp2
 (c++)"pkgDepCache::Policy::GetPriority(pkgCache::PkgIterator const&)@Base" 0.8.16~exp6
 (c++)"pkgDepCache::Policy::GetPriority(pkgCache::PkgFileIterator const&)@Base" 0.8.16~exp6
 (c++)"typeinfo for edspIFType@Base" 0.8.16~exp2
 (c++)"typeinfo for edspSystem@Base" 0.8.16~exp2
 (c++)"typeinfo for edspListParser@Base" 0.8.16~exp2
 (c++)"typeinfo for edspIndex@Base" 0.8.16~exp2
 (c++)"typeinfo name for edspIFType@Base" 0.8.16~exp2
 (c++)"typeinfo name for edspSystem@Base" 0.8.16~exp2
 (c++)"typeinfo name for edspListParser@Base" 0.8.16~exp2
 (c++)"typeinfo name for edspIndex@Base" 0.8.16~exp2
 (c++)"vtable for edspIFType@Base" 0.8.16~exp2
 (c++)"vtable for edspSystem@Base" 0.8.16~exp2
 (c++)"vtable for edspListParser@Base" 0.8.16~exp2
 (c++)"vtable for edspIndex@Base" 0.8.16~exp2
 edspSys@Base 0.8.16~exp2
### generalisation of checksums (with lfs) -- mostly api-compatible available (without sha512 in previous versions)
 (c++)"SHA256_End(_SHA256_CTX*, char*)@Base" 0.8.16~exp2
 (c++)"SHA384_End(_SHA512_CTX*, char*)@Base" 0.8.16~exp2
 (c++)"SHA512_End(_SHA512_CTX*, char*)@Base" 0.8.16~exp2
 (c++)"SHA256_Data(unsigned char const*, unsigned int, char*)@Base" 0.8.16~exp2
 (c++)"SHA256_Init(_SHA256_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA384_Data(unsigned char const*, unsigned int, char*)@Base" 0.8.16~exp2
 (c++)"SHA384_Init(_SHA512_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA512_Data(unsigned char const*, unsigned int, char*)@Base" 0.8.16~exp2
 (c++)"SHA512_Init(_SHA512_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA256_Final(unsigned char*, _SHA256_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA384_Final(unsigned char*, _SHA512_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA512_Final(unsigned char*, _SHA512_CTX*)@Base" 0.8.16~exp2
 (c++)"SHA256_Update(_SHA256_CTX*, unsigned char const*, unsigned int)@Base" 0.8.16~exp2
 (c++)"SHA384_Update(_SHA512_CTX*, unsigned char const*, unsigned int)@Base" 0.8.16~exp2
 (c++)"SHA512_Update(_SHA512_CTX*, unsigned char const*, unsigned int)@Base" 0.8.16~exp2
 (c++)"AddCRC16(unsigned short, void const*, unsigned long long)@Base" 0.8.16~exp2
 (c++)"MD5Summation::Add(unsigned char const*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"MD5Summation::Result()@Base" 0.8.16~exp2
 (c++)"MD5Summation::MD5Summation()@Base" 0.8.16~exp2
 (c++)"SHA1Summation::SHA1Summation()@Base" 0.8.16~exp2
 (c++)"SHA1Summation::Add(unsigned char const*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"SHA1Summation::Result()@Base" 0.8.16~exp2
 (c++)"SHA256Summation::Add(unsigned char const*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"SHA512Summation::Add(unsigned char const*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"debRecordParser::SHA512Hash()@Base" 0.8.16~exp2
 (c++)"pkgRecords::Parser::SHA512Hash()@Base" 0.8.16~exp6
 (c++)"Hashes::AddFD(int, unsigned long long, bool, bool, bool, bool)@Base" 0.8.16~exp6
 (c++)"SummationImplementation::AddFD(int, unsigned long long)@Base" 0.8.16~exp6
 (c++)"typeinfo for MD5Summation@Base" 0.8.16~exp6
 (c++)"typeinfo for SHA1Summation@Base" 0.8.16~exp6
 (c++)"typeinfo for SHA256Summation@Base" 0.8.16~exp6
 (c++)"typeinfo for SHA512Summation@Base" 0.8.16~exp6
 (c++)"typeinfo for SHA2SummationBase@Base" 0.8.16~exp6
 (c++)"typeinfo for SummationImplementation@Base" 0.8.16~exp6
 (c++)"typeinfo name for MD5Summation@Base" 0.8.16~exp6
 (c++)"typeinfo name for SHA1Summation@Base" 0.8.16~exp6
 (c++)"typeinfo name for SHA256Summation@Base" 0.8.16~exp6
 (c++)"typeinfo name for SHA512Summation@Base" 0.8.16~exp6
 (c++)"typeinfo name for SHA2SummationBase@Base" 0.8.16~exp6
 (c++)"typeinfo name for SummationImplementation@Base" 0.8.16~exp6
 (c++)"vtable for MD5Summation@Base" 0.8.16~exp6
 (c++)"vtable for SHA1Summation@Base" 0.8.16~exp6
 (c++)"vtable for SHA256Summation@Base" 0.8.16~exp6
 (c++)"vtable for SHA512Summation@Base" 0.8.16~exp6
 (c++)"vtable for SHA2SummationBase@Base" 0.8.16~exp6
 (c++)"vtable for SummationImplementation@Base" 0.8.16~exp6
### large file support - available in older api-compatible versions without lfs ###
 (c++)"StrToNum(char const*, unsigned long long&, unsigned int, unsigned int)@Base" 0.8.16~exp6
 (c++)"OpProgress::SubProgress(unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, float)@Base" 0.8.16~exp6
 (c++)"OpProgress::OverallProgress(unsigned long long, unsigned long long, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.8.16~exp6
 (c++)"OpProgress::Progress(unsigned long long)@Base" 0.8.16~exp6
 (c++)"SourceCopy::GetFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long long&)@Base" 0.8.16~exp6
 (c++)"pkgAcqFile::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcqFile::pkgAcqFile(pkgAcquire*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.8.16~exp6
 (c++)"pkgAcquire::UriIterator::~UriIterator()@Base" 0.8.16~exp6
 (c++)"pkgAcquire::MethodConfig::~MethodConfig()@Base" 0.8.16~exp6
 (c++)"pkgAcquire::Item::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcquire::Item::Start(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long)@Base" 0.8.16~exp6
 (c++)"pkgRecords::Parser::RecordField(char const*)@Base" 0.8.16~exp6
 (c++)"pkgTagFile::Jump(pkgTagSection&, unsigned long long)@Base" 0.8.16~exp6
 (c++)"pkgTagFile::Offset()@Base" 0.8.16~exp6
 (c++)"pkgTagFile::pkgTagFile(FileFd*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"DynamicMMap::RawAllocate(unsigned long long, unsigned long)@Base" 0.8.16~exp6
 (c++)"PackageCopy::GetFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long long&)@Base" 0.8.16~exp6
 (c++)"pkgAcqIndex::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"indexRecords::parseSumData(char const*&, char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long long&)@Base" 0.8.16~exp6
 (c++)"pkgAcqArchive::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgTagSection::~pkgTagSection()@Base" 0.8.16~exp6
 (c++)"pkgAcqSubIndex::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"debRecordParser::RecordField(char const*)@Base" 0.8.16~exp6
 (c++)"debReleaseIndex::SetTrusted(bool)@Base" 0.8.16~exp6
 (c++)"debReleaseIndex::debReleaseIndex(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.8.16~exp6
 (c++)"pkgAcqMetaIndex::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcqIndexDiffs::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcqMetaSig::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcqDiffIndex::Done(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, pkgAcquire::MethodConfig*)@Base" 0.8.16~exp6
 (c++)"pkgAcquireStatus::Fetched(unsigned long long, unsigned long long)@Base" 0.8.16~exp6
 (c++)"PreferenceSection::~PreferenceSection()@Base" 0.8.16~exp6
 (c++)"pkgCacheGenerator::NewDescription(pkgCache::DescIterator&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, HashSumValue<128> const&, unsigned int)@Base" 0.8.16~exp6
 (c++)"pkgProblemResolver::ResolveInternal(bool)@Base" 0.8.16~exp6
 (c++)"pkgProblemResolver::ResolveByKeepInternal()@Base" 0.8.16~exp6
 (c++)"FileFd::Read(void*, unsigned long long, unsigned long long*)@Base" 0.8.16~exp6
 (c++)"FileFd::Seek(unsigned long long)@Base" 0.8.16~exp6
 (c++)"FileFd::Skip(unsigned long long)@Base" 0.8.16~exp6
 (c++)"FileFd::Write(void const*, unsigned long long)@Base" 0.8.16~exp6
 (c++)"FileFd::Truncate(unsigned long long)@Base" 0.8.16~exp6
 (c++)"pkgCache::PkgIterator::PkgIterator(pkgCache&, pkgCache::Package*)@Base" 0.8.16~exp6
 (c++)"pkgPolicy::GetPriority(pkgCache::PkgFileIterator const&)@Base" 0.8.16~exp6
 (c++)"OptionalIndexTarget::IsOptional() const@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgTagFile@Base" 0.8.16~exp6
 (c++)"typeinfo for IndexTarget@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgSrcRecords@Base" 0.8.16~exp6
 (c++)"typeinfo for OptionalIndexTarget@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgAcquire::UriIterator@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgAcquire::MethodConfig@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgAcquire::Queue@Base" 0.8.16~exp6
 (c++)"typeinfo for pkgAcquire::Worker@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgTagFile@Base" 0.8.16~exp6
 (c++)"typeinfo name for IndexTarget@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgSrcRecords@Base" 0.8.16~exp6
 (c++)"typeinfo name for OptionalIndexTarget@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgAcquire::UriIterator@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgAcquire::MethodConfig@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgAcquire::Queue@Base" 0.8.16~exp6
 (c++)"typeinfo name for pkgAcquire::Worker@Base" 0.8.16~exp6
 (c++)"vtable for pkgTagFile@Base" 0.8.16~exp6
 (c++)"vtable for IndexTarget@Base" 0.8.16~exp6
 (c++)"vtable for pkgSrcRecords@Base" 0.8.16~exp6
 (c++)"vtable for OptionalIndexTarget@Base" 0.8.16~exp6
 (c++)"vtable for pkgAcquire::UriIterator@Base" 0.8.16~exp6
 (c++)"vtable for pkgAcquire::MethodConfig@Base" 0.8.16~exp6
 (c++)"vtable for pkgAcquire::Queue@Base" 0.8.16~exp6
 (c++)"vtable for pkgAcquire::Worker@Base" 0.8.16~exp6
### remove deprecated parameter
 (c++)"pkgDepCache::SetCandidateVersion(pkgCache::VerIterator)@Base" 0.8.16~exp6
 (c++)"pkgDepCache::AddSizes(pkgCache::PkgIterator const&, bool)@Base" 0.8.16~exp6
 (c++)"pkgDepCache::AddStates(pkgCache::PkgIterator const&, bool)@Base" 0.8.16~exp6
