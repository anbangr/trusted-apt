libapt-inst.so.1.4 libapt-inst1.4 #MINVER#
* Build-Depends-Package: libapt-pkg-dev
 (c++)"ExtractTar::Done(bool)@Base" 0.8.0
 (c++)"ExtractTar::Go(pkgDirStream&)@Base" 0.8.0
 (c++)"ExtractTar::StartGzip()@Base" 0.8.0
 (c++)"ExtractTar::ExtractTar(FileFd&, unsigned long, std::basic_string<char, std::char_traits<char>, std::allocator<char> >)@Base" 0.8.0
 (c++)"ExtractTar::~ExtractTar()@Base" 0.8.0
 (c++)"debDebFile::GotoMember(char const*)@Base" 0.8.0
 (c++)"debDebFile::CheckMember(char const*)@Base" 0.8.0
 (c++)"debDebFile::MergeControl(pkgDataBase&)@Base" 0.8.0
 (c++)"debDebFile::ControlExtract::DoItem(pkgDirStream::Item&, int&)@Base" 0.8.0
 (c++)"debDebFile::ControlExtract::~ControlExtract()@Base" 0.8.0
 (c++)"debDebFile::ExtractArchive(pkgDirStream&)@Base" 0.8.0
 (c++)"debDebFile::ExtractControl(pkgDataBase&)@Base" 0.8.0
 (c++)"debDebFile::MemControlExtract::TakeControl(void const*, unsigned long)@Base" 0.8.0
 (c++)"debDebFile::MemControlExtract::Read(debDebFile&)@Base" 0.8.0
 (c++)"debDebFile::MemControlExtract::DoItem(pkgDirStream::Item&, int&)@Base" 0.8.0
 (c++)"debDebFile::MemControlExtract::Process(pkgDirStream::Item&, unsigned char const*, unsigned long, unsigned long)@Base" 0.8.0
 (c++)"debDebFile::MemControlExtract::~MemControlExtract()@Base" 0.8.0
 (c++)"debDebFile::debDebFile(FileFd&)@Base" 0.8.0
 (c++)"pkgExtract::FinishedFile(pkgDirStream::Item&, int)@Base" 0.8.0
 (c++)"pkgExtract::CheckDirReplace(std::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int)@Base" 0.8.0
 (c++)"pkgExtract::HandleOverwrites(pkgFLCache::NodeIterator, bool)@Base" 0.8.0
 (c++)"pkgExtract::Fail(pkgDirStream::Item&, int)@Base" 0.8.0
 (c++)"pkgExtract::DoItem(pkgDirStream::Item&, int&)@Base" 0.8.0
 (c++)"pkgExtract::Aborted()@Base" 0.8.0
 (c++)"pkgExtract::Finished()@Base" 0.8.0
 (c++)"pkgExtract::pkgExtract(pkgFLCache&, pkgCache::VerIterator)@Base" 0.8.0
 (c++)"pkgExtract::~pkgExtract()@Base" 0.8.0
 (c++)"pkgFLCache::TreeLookup(unsigned int*, char const*, char const*, unsigned long, unsigned int*, bool)@Base" 0.8.0
 (c++)"pkgFLCache::AddConfFile(char const*, char const*, pkgFLCache::PkgIterator const&, unsigned char const*)@Base" 0.8.0
 (c++)"pkgFLCache::AddDiversion(pkgFLCache::PkgIterator const&, char const*, char const*)@Base" 0.8.0
 (c++)"pkgFLCache::BeginDiverLoad()@Base" 0.8.0
 (c++)"pkgFLCache::FinishDiverLoad()@Base" 0.8.0
 (c++)"pkgFLCache::GetPkg(char const*, char const*, bool)@Base" 0.8.0
 (c++)"pkgFLCache::Header::Header()@Base" 0.8.0
 (c++)"pkgFLCache::GetNode(char const*, char const*, unsigned int, bool, bool)@Base" 0.8.0
 (c++)"pkgFLCache::DropNode(unsigned int)@Base" 0.8.0
 (c++)"pkgFLCache::HashNode(pkgFLCache::NodeIterator const&)@Base" 0.8.0
 (c++)"pkgFLCache::PrintTree(unsigned int, unsigned long)@Base" 0.8.0
 (c++)"pkgFLCache::pkgFLCache(DynamicMMap&)@Base" 0.8.0
 (c++)"pkgDataBase::GetMetaTmp(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"pkgDataBase::~pkgDataBase()@Base" 0.8.0
 (c++)"pkgDirStream::FinishedFile(pkgDirStream::Item&, int)@Base" 0.8.0
 (c++)"pkgDirStream::Fail(pkgDirStream::Item&, int)@Base" 0.8.0
 (c++)"pkgDirStream::DoItem(pkgDirStream::Item&, int&)@Base" 0.8.0
 (c++)"pkgDirStream::Process(pkgDirStream::Item&, unsigned char const*, unsigned long, unsigned long)@Base" 0.8.0
 (c++)"pkgDirStream::~pkgDirStream()@Base" 0.8.0
 (c++|optional)"debListParser::~debListParser()@Base" 0.8.0
 (c++|optional)"pkgCacheGenerator::ListParser::CollectFileProvides(pkgCache&, pkgCache::VerIterator&)@Base" 0.8.0
 (c++|optional)"pkgCacheGenerator::ListParser::~ListParser()@Base" 0.8.0
 (c++|optional)"pkgCache::DepIterator::operator++(int)@Base" 0.8.0
 (c++|optional)"pkgCache::DepIterator::operator++()@Base" 0.8.0
 (c++|optional)"pkgCache::VerIterator::operator++(int)@Base" 0.8.0
 (c++|optional)"pkgCache::VerIterator::operator++()@Base" 0.8.0
 (c++)"ARArchive::LoadHeaders()@Base" 0.8.0
 (c++)"ARArchive::ARArchive(FileFd&)@Base" 0.8.0
 (c++)"ARArchive::~ARArchive()@Base" 0.8.0
 (c++)"debDpkgDB::InitMetaTmp(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.8.0
 (c++)"debDpkgDB::LoadChanges()@Base" 0.8.0
 (c++)"debDpkgDB::ReadConfFiles()@Base" 0.8.0
 (c++)"debDpkgDB::ReadyFileList(OpProgress&)@Base" 0.8.0
 (c++)"debDpkgDB::ReadyPkgCache(OpProgress&)@Base" 0.8.0
 (c++)"debDpkgDB::ReadDiversions()@Base" 0.8.0
 (c++)"debDpkgDB::ReadFList(OpProgress&)@Base" 0.8.0
 (c++)"debDpkgDB::debDpkgDB()@Base" 0.8.0
 (c++)"debDpkgDB::~debDpkgDB()@Base" 0.8.0
 (c++)"pkgFLCache::NodeIterator::RealPackage() const@Base" 0.8.0
 (c++)"pkgFLCache::Header::CheckSizes(pkgFLCache::Header&) const@Base" 0.8.0
 (c++|optional)"pkgCache::DepIterator::OwnerPointer() const@Base" 0.8.0
 (c++|optional)"pkgCache::VerIterator::OwnerPointer() const@Base" 0.8.0
 (c++)"ARArchive::FindMember(char const*) const@Base" 0.8.0
 (c++)"typeinfo for ExtractTar@Base" 0.8.0
 (c++)"typeinfo for pkgExtract@Base" 0.8.0
 (c++)"typeinfo for pkgDataBase@Base" 0.8.0
 (c++)"typeinfo for pkgDirStream@Base" 0.8.0
 (c++)"typeinfo for debDpkgDB@Base" 0.8.0
 (c++)"typeinfo for debDebFile::ControlExtract@Base" 0.8.0
 (c++)"typeinfo for debDebFile::MemControlExtract@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCache::DepIterator@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCache::VerIterator@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++|optional)"typeinfo for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
 (c++)"typeinfo name for ExtractTar@Base" 0.8.0
 (c++)"typeinfo name for pkgExtract@Base" 0.8.0
 (c++)"typeinfo name for pkgDataBase@Base" 0.8.0
 (c++)"typeinfo name for pkgDirStream@Base" 0.8.0
 (c++)"typeinfo name for debDpkgDB@Base" 0.8.0
 (c++)"typeinfo name for debDebFile::ControlExtract@Base" 0.8.0
 (c++)"typeinfo name for debDebFile::MemControlExtract@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCache::DepIterator@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCache::VerIterator@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++|optional)"typeinfo name for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
 (c++)"vtable for ExtractTar@Base" 0.8.0
 (c++)"vtable for pkgExtract@Base" 0.8.0
 (c++)"vtable for pkgDataBase@Base" 0.8.0
 (c++)"vtable for pkgDirStream@Base" 0.8.0
 (c++)"vtable for debDpkgDB@Base" 0.8.0
 (c++)"vtable for debDebFile::ControlExtract@Base" 0.8.0
 (c++)"vtable for debDebFile::MemControlExtract@Base" 0.8.0
 (c++|optional)"vtable for pkgCacheGenerator::ListParser@Base" 0.8.0
 (c++|optional)"vtable for pkgCache::DepIterator@Base" 0.8.0
 (c++|optional)"vtable for pkgCache::VerIterator@Base" 0.8.0
 (c++|optional)"vtable for pkgCache::Iterator<pkgCache::Dependency, pkgCache::DepIterator>@Base" 0.8.0
 (c++|optional)"vtable for pkgCache::Iterator<pkgCache::Package, pkgCache::PkgIterator>@Base" 0.8.0
 (c++|optional)"vtable for pkgCache::Iterator<pkgCache::Version, pkgCache::VerIterator>@Base" 0.8.0
### gcc-4.4 specific
# (c++|regex|optional=std)"^char\* std::[^ ]+<.+ >::_.+@Base$" 0.8.0
# (c++|optional=std)"std::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::basic_string<char, std::char_traits<char>, std::allocator<char> >::append<unsigned char*>(unsigned char*, unsigned char*)@Base" 0.8.0
### gcc-4.6 specific
 (c++|optional=std)"std::vector<APT::Configuration::Compressor, std::allocator<APT::Configuration::Compressor> >::~vector()@Base" 0.8.12
 (c++|optional=std)"std::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_dispatch<unsigned char*>(__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned char*, unsigned char*, std::__false_type)@Base" 0.8.0
### try to ignore std:: template instances
 (c++|regex|optional=std)"^std::basic_string<.+ >\(.+\)@Base$" 0.8.0
 (c++|regex|optional=std)"^typeinfo name for std::iterator<.*>@Base$" 0.8.0
 (c++|regex|optional=std)"^typeinfo for std::iterator<.*>@Base$" 0.8.0
###
